{"version":3,"sources":["Pages/Components/survey.svg","Pages/Components/male.svg","Pages/Components/female.svg","Pages/Components/fever.svg","Pages/Components/exercise.svg","Pages/Components/patient.svg","Pages/Components/funeral.svg","Pages/Parts/TableIcons.js","Pages/Parts/Header.js","Pages/Parts/SideBar.js","Pages/Parts/Footer.js","Pages/Home.js","Pages/NewCase.js","Pages/About.js","Pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Header","className","SideBar","id","class","href","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","to","Footer","Home","useState","setTableCovid","Confirmed","setConfirmed","NewConfirmed","setNewConfirmed","Recovered","setRecovered","Hospitalized","setHospitalized","NewHospitalized","setNewHospitalized","Deaths","setDeaths","NewRecovered","setNewRecovered","NewDeaths","setNewDeaths","UpdateDate","setUpdateDate","Province","setProvince","Gender","setGender","DailyData","setDailyData","React","page","setPage","rowsPerPage","setRowsPerPage","dataProvince","columns","label","field","width","rows","name","amount","Bangkok","Phuket","Nonthaburi","Yala","Songkhla","Pattani","Narathiwat","Chumphon","Chachoengsao","Krabi","Satun","Phatthalung","Buriram","Surin","Kanchanaburi","Prachinburi","Sisaket","Trang","Ratchaburi","Rayong","Phitsanulok","Saraburi","Loei","Lampang","Lamphun","Mukdahan","Phetchabun","Phayao","Sukhothai","Tak","Chanthaburi","Uttaradit","Kalasin","Chaiyaphum","Phetchaburi","Lopburi","Phrae","Yasothon","formatValue","value","toFixed","anime","targets","translateX","Onloadxx","axios","get","then","response","QueryData","data","Data","moment","format","subtract","calendar","useEffect","duration","style","opacity","src","fever","exercise","patient","funeral","Selected7Days","slice","height","dataKey","stroke","wrapperStyle","backgroundColor","strokeDasharray","fill","barSize","ChartNConfirmedandNRecoverd","verticalAlign","male","female","Male","Female","COLORS","minHeight","innerRadius","outerRadius","paddingAngle","entry","map","index","length","PieGender","Paper","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","column","TableCell","key","minWidth","color","fontSize","TableBody","row","hover","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","target","maxWidth","icons","title","useStyles","makeStyles","list","dateFormat","require","Transition","Slide","direction","Transition2","NewCase","open","setOpen","OpenconfirmAccept","setOpenconfirmAccept","ShowAddressxx","setShowAddressxx","DateTimeNow","setDateTimeNow","setMonthx","setYearx","DataBoxLeft","setDataBoxLeft","DataBoxMid","setDataBoxMid","DataBoxRight","setDataBoxRight","openx","setOpenx","handleClickxx","item","console","log","ID","openB1","setOpenB1","handleClickxxB1","openB2","setOpenB2","handleClickxxB2","openB3","setOpenB3","handleClickxxB3","PersoID","setPersoID","Name","setName","LastName","setLastName","Age","setAge","Genderchecked","setGenderchecked","AddressPerson","setAddressPerson","Job","setJob","Comefrom","setComefrom","stateCheckA","setStateCheckA","stateCheckB","setStateCheckB","stateCheckC","setStateCheckC","stateCheckD","setStateCheckD","stateCheckE","setStateCheckE","stateCheckF","setStateCheckF","stateCheckG","setStateCheckG","stateCheckH","setStateCheckH","stateCheckI","setStateCheckI","stateCheckJ","setStateCheckJ","stateCheckK","setStateCheckK","Temperature","setTemperature","checkedRisk","setCheckedRisk","Recorder","setRecorder","RecorderWhoChangeState","setRecorderWhoChangeState","Date","toLocaleDateString","DateArrivedVillage","setDateArrivedVillage","GetIDParcel","setGetIDParcel","AcceptPeople","setAcceptPeople","checkedAfterquarantine","setCheckedAfterquarantine","Monthza","Yearza","BoxStsProps1","bgcolor","borderColor","m","border","fontFamily","textAlign","BoxStsProps2","BoxStsProps3","Clearfield","updateValue","info","params","Quarantine","YouRiskNow","NoCovid","MenuAddress","DropdownAddress","ID_ADDRESS","Address_Name","fullwidth","TimeRanger","DateTime","Month","Year","SelectAccept","dataSpecific","GetData","handleClickOpenConfirmAccept","handleClose","handleClickCloseConfirmAccept","onClick","window","location","reload","Grid","xs","sm","md","lg","xl","Card","elevation","variant","survey","container","spacing","Badge","badgeContent","Collapse","in","List","ListItem","button","ListItemAvatar","Avatar","ListItemText","Box","display","justifyContent","borderRadius","RecordTime","Personal_ID","FormControlLabel","control","Checkbox","checked","stateCheckedA","disabled","stateCheckedB","stateCheckedC","stateCheckedD","stateCheckedE","stateCheckedF","stateCheckedG","stateCheckedH","stateCheckedI","stateCheckedJ","stateCheckedK","Alert","severity","AlertTitle","Divider","Dialog","fullWidth","TransitionComponent","onClose","DialogTitle","DialogContent","onSubmit","e","preventDefault","setTimeout","formData","post","catch","error","alert","PostToDatabase","TextField","required","autoFocus","type","inputProps","minLength","maxLength","InputLabelProps","onChange","min","FormLabel","Radio","multiline","FormControl","InputLabel","htmlFor","Select","native","select","utils","DateFnsUtils","DatePicker","date","fullDate","Day","onDateChange","max","step","DialogActions","Button","size","form","DialogContentText","accept","put","Accept","margin","About","NotFoundPage","data-text","App","exact","path","Boolean","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6892ad9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/survey.b291413a.svg\";","module.exports = __webpack_public_path__ + \"static/media/male.81fa839a.svg\";","module.exports = __webpack_public_path__ + \"static/media/female.35f48a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fever.c8faaac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/exercise.ed9f707b.svg\";","module.exports = __webpack_public_path__ + \"static/media/patient.87f44aed.svg\";","module.exports = __webpack_public_path__ + \"static/media/funeral.f2270a68.svg\";","import AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport React, { forwardRef } from 'react'\n\nconst TableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n  export default TableIcons","import React from 'react'\n\nfunction Header() {\n    return (\n        <>\n{/* **************** TopBar Box ******************** */}\n            {/* Topbar */}\n            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n            {/* <button onClick={() =>Onloadxx()}>wow</button> */}\n{/* **************** BigBoxGirl ******************** */}\n                {/* Topbar Navbar */}\n                {/* <ul className=\"navbar-nav ml-auto \"> */}\n                    {/* Nav Item - Messages */}\n                    {/* <div className=\"topbar-divider d-none d-sm-block \" /> */}\n\n{/* **************** BoxGirl ******************** */}\n                    {/* Nav Item - User Information */}\n                    {/* <li className=\"nav-item dropdown no-arrow \">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Name Shit</span>\n                            <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\n                        </a> */}\n\n{/* **************** DropdownGirl ******************** */}\n                        {/* Dropdown - User Information */}\n                        {/* <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in \" aria-labelledby=\"userDropdown\">\n                            <a className=\"dropdown-item\" href=\"#\">\n                                <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" />\n                                    Profile\n                                </a>\n                            <a className=\"dropdown-item\" href=\"#\">\n                                <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\" />\n                                    Settings\n                                </a>\n                            <a className=\"dropdown-item\" href=\"#\">\n                                <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\n                                    Activity Log\n                                </a>\n                            <div className=\"dropdown-divider\" />\n                            <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\n                                    Logout\n                                </a>\n                        </div>\n                    </li>\n                </ul> */}\n            </nav>\n            {/* End of Topbar */}\n        </>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Link ,Redirect} from 'react-router-dom';\n\nfunction SideBar() {\n    return (\n        <>\n{/* **************** Sidebar ******************** */}\n        {/* Sidebar */}\n        <ul className=\"navbar-nav bg-gradient-dark sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n{/* **************** Big Home ******************** */}\n            {/* Sidebar - Brand */}\n            <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"/\">\n                <div class=\"sidebar-brand-icon rotate-n-15\">\n                    <i className=\"fas fa-fw fa-tachometer-alt\" />\n                </div>\n                <div class=\"sidebar-brand-text mx-3\">Home</div>\n            </a>\n\n{/* **************** Menu Begin ******************** */}\n            <div className=\"sidebar-heading\" >\n                <h4 id='useFont'>Menu</h4>\n            </div>\n\n            {/* Nav Item - Pages Collapse Menu */}\n            <li className=\"nav-item\">\n                <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n                    <i className=\"fas fa-fw fa-cog\" />\n                    <span>Route:</span>\n                </a>\n                <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n                    <div className=\"bg-white py-2 collapse-inner rounded\">\n                        <h6 className=\"collapse-header\">Pages:</h6>\n                        <Link to =\"/\" className=\"collapse-item\" href=\"/\" >Home</Link>\n                        <Link to =\"/NewCase\" className=\"collapse-item\" href=\"/NewCase\">Add new case</Link>\n                        <Link to =\"*\" className=\"collapse-item\" href=\"/NewCase\">404</Link>\n                    </div>\n                </div>\n            </li>\n\n            {/* Divider */}\n            <hr className=\"sidebar-divider\" />\n            </ul>\n        </>\n    )\n}\n\nexport default SideBar\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <>\n{/* **************** Footer ******************** */}\n            {/* Footer */}\n            <footer className=\"sticky-footer bg-white mt-4\">\n                <div className=\"container my-auto\">\n                    <div className=\"copyright text-center my-auto\">\n                        <h5>Made with ❤️  by @beyondsundae </h5>\n                    </div>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer\n","import React, { Fragment,useState, useEffect,forwardRef } from 'react'\nimport './Components/App.css';\nimport axios from 'axios';\nimport AnimatedNumber from \"animated-number-react\";\nimport anime from 'animejs/lib/anime.es.js'\nimport moment from 'moment'\nimport male from './Components/male.svg'\nimport female from './Components/female.svg'\nimport fever from './Components/fever.svg'\nimport exercise from './Components/exercise.svg'\nimport patient from './Components/patient.svg'\nimport funeral from './Components/funeral.svg'\nimport { PieChart, Pie,ResponsiveContainer, \n    ComposedChart, Area, CartesianGrid, Bar, XAxis, \n    YAxis, Tooltip, Legend, Cell } from 'recharts';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MaterialTable from \"material-table\";\n\nimport TableIcons from './Parts/TableIcons'\n\nimport { Link ,Redirect} from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport Header from './Parts/Header';\nimport SideBar from './Parts/SideBar';\nimport Footer from './Parts/Footer';\n\n\nexport default function Home() {\n    \n    // window.onload = function() {\n    //         Get7Days();\n    //         GetDataCovid();\n    //         GetProvinceAndGender();\n    //         TimeRanger ()\n    // }\n\n    const [TableCovid, setTableCovid] = useState();\n    const [Confirmed, setConfirmed] = useState();\n    const [NewConfirmed, setNewConfirmed] = useState();\n    const [Recovered, setRecovered] = useState();\n    const [Hospitalized, setHospitalized] = useState();\n    const [NewHospitalized, setNewHospitalized] = useState();\n    const [Deaths, setDeaths] = useState();\n    const [NewRecovered, setNewRecovered] = useState();\n    const [NewDeaths, setNewDeaths] = useState();\n    const [UpdateDate, setUpdateDate] = useState();\n    const [Province, setProvince] = useState([]);\n    const [Gender, setGender] = useState([]);\n    const [DailyData, setDailyData] = useState([]);\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const dataProvince = {\n        columns : [\n            {label: 'name', field: 'Name', width: 10 },\n            {label: 'amount', field: 'Amount', width: 15 }\n        ],\n\n        rows : [\n            {name: 'Bangkok', amount: Province.Bangkok}, {name: 'Phuket', amount: Province.Phuket},{name: 'Nonthaburi', amount: Province.Nonthaburi},\n            {name: 'Samut Prakan', amount: Province[\"Samut Prakan\"]}, {name: 'Yala', amount: Province.Yala},{name: 'Songkhla', amount: Province.Songkhla},\n            {name: 'Chonburi', amount: Province[\"Chonburi\"]}, {name: 'Pattani', amount: Province.Pattani},{name: 'Narathiwat', amount: Province.Narathiwat},\n            {name: 'Chiang Mai', amount: Province[\"Chiang Mai\"]}, {name: 'Pathum Thani', amount: Province[\"Pathum Thani\"]},{name: 'Nakhon Pathom', amount: Province[\"Nakhon Pathom\"]},\n            {name: 'Chumphon', amount: Province.Chumphon}, {name: 'Chachoengsao', amount: Province.Chachoengsao},{name: 'Krabi', amount: Province.Krabi},\n            {name: 'Nakhon Ratchasima', amount: Province[\"Nakhon Ratchasima\"]}, {name: 'Satun', amount: Province.Satun},{name: 'Surat Thani', amount: Province[\"Surat Thani\"]},\n            {name: 'Prachuap Khiri Khan', amount: Province[\"Prachuap Khiri Khan\"]}, {name: 'Ubon Ratchathani', amount: Province[\"Ubon Ratchathani\"]},{name: 'Phatthalung', amount: Province.Phatthalung},\n            {name: 'Samut Sakhon', amount: Province[\"Samut Sakhon\"]}, {name: 'Buriram', amount: Province.Buriram},{name: 'Nakhon Si Thammarat', amount: Province[\"Nakhon Si Thammarat\"]},\n            {name: 'Udon Thani', amount: Province[\"Udon Thani\"]}, {name: 'Sa Kaeo', amount: Province[\"Sa Kaeo\"]},{name: 'Surin', amount: Province.Surin},\n            {name: 'Kanchanaburi', amount: Province.Kanchanaburi}, {name: 'Nakhon Sawan', amount: Province[\"Nakhon Sawan\"]},{name: 'Prachinburi', amount: Province.Prachinburi},\n            {name: 'Chiang Rai', amount: Province[\"Chiang Rai\"]}, {name: 'Sisaket', amount: Province.Sisaket},{name: 'Trang', amount: Province.Trang},\n            {name: 'Ratchaburi', amount: Province.Ratchaburi}, {name: 'Suphan Buri', amount: Province[\"Suphan Buri\"]},{name: 'Rayong', amount: Province.Rayong},\n            {name: 'Phitsanulok', amount: Province.Phitsanulok}, {name: 'Khon Kaen', amount: Province[\"Khon Kaen\"]},{name: 'Mae Hong Son', amount: Province[\"Mae Hong Son\"]},\n            {name: 'Saraburi', amount: Province.Saraburi}, {name: 'Loei', amount: Province.Loei},{name: 'Phra Nakhon Si Ayutthaya', amount: Province[\"Phra Nakhon Si Ayutthaya\"]},\n            {name: 'Lampang', amount: Province.Lampang}, {name: 'Lamphun', amount: Province.Lamphun},{name: 'Mukdahan', amount: Province.Mukdahan},\n            {name: 'Phetchabun', amount: Province.Phetchabun}, {name: 'Phayao', amount: Province.Phayao},{name: 'Sukhothai', amount: Province.Sukhothai},\n            {name: 'Tak', amount: Province.Tak}, {name: 'Nong Bua Lamphu', amount: Province[\"Nong Bua Lamphu\"]},{name: 'Chanthaburi', amount: Province.Chanthaburi},\n            {name: 'Roi Et', amount: Province[\"Roi Et\"]}, {name: 'Uttaradit', amount: Province.Uttaradit},{name: 'Kalasin', amount: Province.Kalasin},\n            {name: 'Chaiyaphum', amount: Province.Chaiyaphum}, {name: 'Nong Khai', amount: Province[\"Nong Khai\"]},{name: 'Phetchaburi', amount: Province.Phetchaburi},\n            {name: 'Nakhon Phanom', amount: Province[\"Nakhon Phanom\"]}, {name: 'Phang Nga', amount: Province[\"Phang Nga\"]},{name: 'Lopburi', amount: Province.Lopburi},\n            {name: 'Amnat Charoen', amount: Province[\"Amnat Charoen\"]}, {name: 'Nakhon Nayok', amount: Province[\"Nakhon Nayok\"]},{name: 'Phrae', amount: Province.Phrae},\n            {name: 'Uthai Thani', amount: Province[\"Uthai Thani\"]}, {name: 'Yasothon', amount: Province.Yasothon},{name: 'Sakon Nakhon', amount: Province[\"Sakon Nakhon\"]},   \n            {name: 'Samut Songkhram', amount: Province[\"Samut Songkhram\"]}, {name: 'Maha Sarakham', amount: Province[\"Maha Sarakham\"]}\n        ]\n    }\n\n\n    const formatValue = value => value.toFixed(0);\n\n    const Animated = anime({\n        targets: '.xxxx',\n        translateX: [0,50],\n        // easing: 'easeInOutExpo'\n\n      }); \n\n    // const Animated2 = anime({\n    //     targets: '.wow',\n    //     innerHTML: [0, 1000],\n        \n    //     easing: 'easeInOutExpo',\n    //     direction: 'alternate',\n    //     loop: 3,\n    //     // rotate: 360,\n        \n    //     round: 1 // Will round the animated value to 1 decimal\n    // })\n\n    function GetDataCovid (){\n        return axios.get('https://covid19.th-stat.com/api/open/today') \n        .then(function (response) {\n            const data = response.data;\n            // console.table(data)\n            setTableCovid(data);\n            setConfirmed(data.Confirmed)\n            setNewConfirmed(data.NewConfirmed)\n            setRecovered(data.Recovered)\n            setHospitalized(data.Hospitalized)\n            setNewHospitalized(data.NewHospitalized)\n            setDeaths(data.Deaths)\n            setNewRecovered(data.NewRecovered)\n            setNewDeaths(data.NewDeaths)\n            setUpdateDate(data.UpdateDate)\n            })}\n\n    function Get7Days (item){\n        axios.get('https://covid19.th-stat.com/api/open/timeline') \n        .then(function (response) {\n            const Original = response.data;\n            const QueryData = Original.Data \n            setDailyData(QueryData)\n        })} \n\n    function GetProvinceAndGender (){\n        return axios.get('https://covid19.th-stat.com/api/open/cases/sum') \n        .then(function (response) {\n            const data = response.data;\n            setProvince(data.Province)\n            setGender(data.Gender)\n            \n        })}\n\n    function TimeRanger (){\n        const CurrentTime = moment().format('L'); \n        const PassedTime = moment().subtract(7, 'days').calendar();\n        // console.table(CurrentTime)\n        // console.table(PassedTime)\n    }\n\n    function ChartNConfirmedandNRecoverd (){\n        const Selected7Days = DailyData.slice(-7)\n        return(\n            // old 600 350\n            <ResponsiveContainer >\n                <ComposedChart width={750} height={320} data={Selected7Days}>\n                    <XAxis dataKey=\"Date\" stroke=\"#8884d8\" />\n                    <YAxis/>\n                    <Tooltip wrapperStyle={{ width: 200, backgroundColor: '#ccc' }} />\n                    <Legend/>\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Bar name=\"New Infected\" dataKey=\"NewConfirmed\" fill=\"#5B8BEB\" barSize={30} />\n                    <Bar name=\"New Recovered\" dataKey=\"NewRecovered\" fill=\"#AEED76\" barSize={30} />\n                </ComposedChart>\n            </ResponsiveContainer>\n        )\n    }\n\n    function ChartConfirmedandRecovered (){\n        return(\n            <ResponsiveContainer>\n                <ComposedChart width={750} height={320} data={DailyData}>\n                    <XAxis dataKey=\"Date\" stroke=\"#8884d8\"  />\n                    <YAxis/>\n                    <Tooltip wrapperStyle={{ width: 200, backgroundColor: '#ccc' }} />\n                    <Legend verticalAlign=\"bottom\" height={36}/>\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Area dataKey=\"Confirmed\" fill=\"#5B8BEB\" barSize={30} stroke=\"#5B8BEB\"/>\n                    <Area dataKey=\"Recovered\" fill=\"#AEED76\" barSize={30} stroke=\"#AEED76\"/>\n                </ComposedChart>\n            </ResponsiveContainer>\n        )\n    }\n\n    function PieGender (){\n        const data = [{name: 'Male', value: Gender.Male}, {name: 'Female', value: Gender.Female}]\n        const COLORS = ['#0088FE', '#FFB6C1'];\n\n        return(\n            <ResponsiveContainer minHeight={400}>\n            <PieChart >\n                <Pie\n                    data={data} \n                    innerRadius=\"0%\"\n                    outerRadius=\"80%\"\n                    fill=\"#8884d8\"\n                    paddingAngle={0}\n                    label ={(entry) => entry.name + \": \" + entry.value }\n                >\n                    {\n                        data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>)\n                    }\n                </Pie>\n                <Legend/>\n                <Tooltip/>\n            </PieChart>\n            </ResponsiveContainer>\n        )\n\n    }\n\n    const Onloadxx =()=>{\n        Get7Days();\n            GetDataCovid();\n            GetProvinceAndGender();\n            TimeRanger ()\n    }\n\n    useEffect(() => {\n        Onloadxx()\n        // console.log(\"UseEffect\")\n        // console.log(xxxx)\n        // console.log(TableCovid)\n        // console.table(Province)\n        // console.log(Gender)\n        // console.table(\"State Date\",Date)\n        // console.log(SevenDays)\n        // console.log(...DailyData)\n        }, [])\n    \n        useEffect(()=>{\n            // console.log(Province)\n        })\n        \n    return (\n\n        <Fragment>\n            {/* Page Wrapper */}\n        \n{/* **************** Sidebar ******************** */}\n            {/* Sidebar */}\n            <SideBar/>\n\n{/* **************** Content ******************** */}\n            {/* Content Wrapper */}\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n{/* **************** TopBar ******************** */}\n                    {/* Topbar */}\n                    <Header/>\n    \n{/* **************** Main ******************** */}\n            {/* Main Content */}\n            <div id=\"content\">\n\n    {/* **************** ContentBox ******************** */}\n                    {/* Begin Page Content */}\n                    <div className=\"container-fluid\">\n                        {/* Page Heading */}\n                        <div className=\"d-sm-flex align-items-center justify-content-between mb-1 \">\n                            <h1 className=\"h1 mb-0 text-gray-800\">Thailand Situation</h1>\n                            {/* <h1 className='wow'></h1> */}\n                            \n                        </div>\n                            <p class='mb-4' id='runnn'><p >updated: {UpdateDate}</p></p><br/>\n\n        {/* **************** Cards ******************** */}\n                        {/* Content Row */}\n                        <div className=\"row\">\n\n            {/* **************** Cards1 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4 \">\n                                <div className=\"card border-left-primary shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-primary text-uppercase mb-1\">Infected</div>\n                                                <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                    <div class='xxxx'>\n                                                        <AnimatedNumber\n                                                        value={Confirmed}\n                                                        duration={1300}\n                                                        formatValue={formatValue}\n                                                        />\n                                                    </div>\n                                                </div><br/>\n                                                <div>New Infected{\" \"}{NewConfirmed}</div>\n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={fever}/>\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n            {/* **************** Cards2 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4\">\n                                <div className=\"card border-left-success shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-success text-uppercase mb-1\">Recovered</div>\n                                                    <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                        <div class='xxxx'>\n                                                            <AnimatedNumber\n                                                            value={Recovered}\n                                                            duration={1300}\n                                                            formatValue={formatValue}\n                                                            />\n                                                        </div>\n                                                    </div><br/>\n                                                    <div>New Recovered{\" \"}{NewRecovered}</div>\n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={exercise}/>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n            {/* **************** Cards3 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4\">\n                                <div className=\"card border-left-warning shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-warning text-uppercase mb-1\">Hospitalized</div>\n                                                    <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                        <div class='xxxx'>\n                                                            <AnimatedNumber\n                                                            value={Hospitalized}\n                                                            duration={1300}\n                                                            formatValue={formatValue}\n                                                            />\n                                                        </div>\n                                                    </div><br/>\n                                                    <div>New Hospitalized{\" \"}{NewHospitalized}</div>\n                                                    \n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={patient}/>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \n            {/* **************** Cards4 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4\">\n                                <div className=\"card border-left-danger shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-danger text-uppercase mb-1\">Deaths</div>\n                                                    <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                        <div class='xxxx'>\n                                                            <AnimatedNumber\n                                                            value={Deaths}\n                                                            duration={1300}\n                                                            formatValue={formatValue}\n                                                            />\n                                                        </div>\n                                                    </div><br/>\n                                                    <div>New Deaths{\" \"}{NewDeaths}</div>\n                                                    \n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={funeral}/>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n        {/* **************** UnderCards ******************** */}                \n                        {/* Content Row */}\n                        <div className=\"row\">\n                            {/* Area Chart */}\n                            <div className=\"col-xl-6 col-lg-12 col-md-12\">\n                                <div className=\"card shadow mb-4\">\n                                    {/* Card Header - Dropdown */}\n                                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Information of infected in 7 Days</h6>\n                                    </div>\n                                    {/* Card Body */}\n                                    <div className=\"card-body\">\n                                        <div className=\"chart-area pb-2\">\n                                            {/* {Monitor()} */}\n                                            {ChartNConfirmedandNRecoverd()}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Pie Chart */}\n                            <div className=\"col-xl-6 col-lg-12 col-md-12\">\n                                <div className=\"card shadow mb-4\">\n                                    {/* Card Header - Dropdown */}\n                                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Information since January</h6>\n                                    </div>\n                                    {/* Card Body */}\n                                    <div className=\"card-body\">\n                                        <div className=\"chart-pie pt-4 pb-5\">\n                                            {ChartConfirmedandRecovered()}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Pie Chart */}\n                            <div className=\"col-xl-5 col-lg-12 col-md-12 col-sm-6 \">\n\n                                <div className=\"card shadow pb-5 mb-4 \">\n                                    {/* Card Header - Dropdown */}\n                                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Infecter's gender </h6>\n                                    </div>\n                                    {/* Card Body */}\n                                    <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                \n                                                <div class='col-xl-6 col-lg-6 col-md-6 d-none d-sm-block text-center' >\n                                                    <img style={{ width: \"50%\"}} src={male}/>\n                                                    <br/><br/>\n                                                </div>\n                                                <div class='col-xl-6 col-lg-6 col-md-6 d-none d-sm-block text-center'>\n                                                    <img style={{ width: \"50%\"}} src={female}/>\n                                                    <br/><br/>\n                                                </div>\n                                                <div class='col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center' >\n                                                    {PieGender()}\n                                                </div>\n                                            </div>    \n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-xl-1 col-lg-12 col-md-12 col-sm-6 d-none\"/>\n\n                            <div className=\"col-xl-6 col-lg-12 col-md-12 col-sm-6  d-none\">\n                                <div className=\"card shadow pb-5 mb-4 \">\n                                        {/* Card Header - Dropdown */}\n                                        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                            <h6 className=\"m-0 font-weight-bold text-primary\">Infecter in each provinces </h6>\n                                        </div>\n                                        {/* Card Body */}\n                                        <div className=\"card-body \">\n                                                <div className=\"row\">\n                                                    <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-6\">\n                                                        {/* <MDBDataTable\n                                                        striped\n                                                        bordered\n                                                        small\n                                                        data={dataProvince}\n                                                        /> */}\n\n                                                    <Paper>\n                                                        <TableContainer style={{maxHeight: 440}}>\n                                                            <Table stickyHeader >\n                                                            <TableHead >\n                                                                <TableRow >\n                                                                {dataProvince.columns.map(column => (\n                                                                    <TableCell\n                                                                    \n                                                                    key={column.label}\n                                                                    style={{ minWidth: column.width,backgroundColor: \"gray\", color:\"white\", fontSize: 20 }}\n                                                                    >\n                                                                    {column.field}\n                                                                    </TableCell>\n                                                                ))}\n                                                                </TableRow>\n                                                            </TableHead>\n\n                                                            <TableBody >\n                                                                {dataProvince.rows\n                                                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                                                .map(row => {\n                                                                    return (\n                                                                    <TableRow hover key={row.name} >\n                                                                        {dataProvince.columns.map(column => {\n                                                                        const value = row[column.label];\n                                                                        return <TableCell key={column.label}>{value}</TableCell>;\n                                                                        })}\n                                                                    </TableRow>\n                                                                    );\n                                                                })}\n                                                            </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n\n                                                        <TablePagination\n                                                            rowsPerPageOptions={[10, 25, 100]}\n                                                            component=\"div\"\n                                                            count={dataProvince.rows.length}\n                                                            rowsPerPage={rowsPerPage}\n                                                            page={page}\n                                                            onChangePage={handleChangePage}\n                                                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                                                        />\n                                                    </Paper>\n                                                    </div> \n                                                </div>    \n                                        </div>\n                                    </div>\n                            </div>\n\n                            <div className=\"col-xl-7 col-lg-12 col-md-12 col-sm-6 \">\n                                <div className=\"card shadow pb-5 mb-4 \">\n                                        {/* Card Header - Dropdown */}\n                                        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                            <h6 className=\"m-0 font-weight-bold text-primary\">Infecter in each provinces </h6>\n                                        </div>\n                                        {/* Card Body */}\n                                        <div className=\"card-body \">\n                                                <div className=\"row\">\n                                                    <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-6\">\n                                                    <div style={{ maxWidth: \"100%\" }}>\n                                                        <MaterialTable\n                                                        icons={TableIcons}\n                                                        columns={[\n                                                            {title: 'Name', field: 'name'},\n                                                            {title: 'Amount', field: 'amount'}\n                                                        ]}\n                                                        data={\n                                                            dataProvince.rows\n                                                        }\n                                                        title=\"Amount of infecters\"\n                                                        />\n                                                    </div>\n                                                    </div> \n                                                </div>    \n                                        </div>\n                                    </div>\n                            </div>\n\n                        </div>\n                        {/* Content Row */}\n                    </div>\n                    {/* /.container-fluid */}\n                </div>\n\n{/* **************** Footer ******************** */}\n                {/* Footer */}\n                <Footer/>\n            </div>\n\n        </Fragment>\n\n    )\n}\n","import React, { Fragment,useState, useEffect } from 'react'\nimport './Components/App.css';\nimport Header from './Parts/Header';\nimport SideBar from './Parts/SideBar';\nimport Footer from './Parts/Footer';\nimport axios from 'axios';\nimport moment from 'moment'\nimport Box from \"@material-ui/core/Box\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Card from '@material-ui/core/Card';\nimport Zoom from '@material-ui/core/Zoom';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport Badge from '@material-ui/core/Badge';\nimport Radio from '@material-ui/core/Radio';\n// import socketIOClient from 'socket.io-client';\nimport Avatar from '@material-ui/core/Avatar';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Select from '@material-ui/core/Select';\nimport Slide from '@material-ui/core/Slide';\n// import FaceIcon from '@material-ui/icons/Face';\n// import MailIcon from '@material-ui/icons/Mail';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {DatePicker} from '@material-ui/pickers';\nimport Divider from \"@material-ui/core/Divider\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link, NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport TextField from '@material-ui/core/TextField';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { withStyles} from \"@material-ui/core/styles\";\nimport { FaBoxOpen, FaReceipt} from \"react-icons/fa\";\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport survey from './Components/survey.svg'\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  import MomentUtils from '@date-io/moment';\n  import DateFnsUtils from '@date-io/date-fns';\n\n\n    const useStyles = makeStyles({\n        list: { width: 250}\n      });\n    \n    var dateFormat = require('dateformat');\n\n    const Transition = React.forwardRef(function Transition(props, ref) {\n        return <Slide direction=\"right\" ref={ref} {...props} />;\n      });\n\n    const Transition2 = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n    });\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\" />;\n      }\n\n    const NewCase =()=>{\n        \n        // window.onload = function() {\n        //     MenuAddress();\n        //         updateValue ()\n        //         TimeRanger();\n        //     handleClickxxB3();\n        //     handleClickxxB2();\n        //     handleClickxxB1();\n        // }\n\n        const [open, setOpen] = useState(false);\n        const [OpenconfirmAccept, setOpenconfirmAccept] = useState(false);\n    \n        const [ShowAddressxx, setShowAddressxx] = useState();\n        const [DateTimeNow, setDateTimeNow] = useState();\n        const [Monthx, setMonthx] = useState();\n        const [Yearx, setYearx] = useState();\n        const [DataBoxLeft, setDataBoxLeft] = useState([]);\n        const [DataBoxMid, setDataBoxMid] = useState([]);\n        const [DataBoxRight, setDataBoxRight] = useState([]);\n    \n    \n        const [openx, setOpenx] = useState(true);\n        const handleClickxx=(item)=> {\n            console.log(\"Handle Clicked....\"+item.ID);\n            // console.log(openx)\n            setOpenx({...openx,[item.ID]:!openx[item.ID]});\n            }\n        const [openB1, setOpenB1] = useState(true);\n        const handleClickxxB1=(item)=> {\n            // console.log(\"Handle Clicked....\"+'B1');\n            // console.log(openB2)\n            setOpenB1({...openB1,['B1']:!openB1['B1']});\n            }\n        const [openB2, setOpenB2] = useState(true);\n        const handleClickxxB2=(item)=> {\n            // console.log(\"Handle Clicked....\"+'B2');\n            // console.log(openB2)\n            setOpenB2({...openB2,['B2']:!openB2['B2']});\n            }\n        const [openB3, setOpenB3] = useState(true);\n        const handleClickxxB3=(item)=> {\n            // console.log(\"Handle Clicked....\"+'B2');\n            // console.log(openB3)\n            setOpenB3({...openB3,['B3']:!openB3['B3']});\n            }\n    \n        // const [state, setState] = React.useState({\n        //         right: false\n        //       });\n        // const toggleDrawer = (side, open) => event => {\n        //     setState({ ...state, [side]: open });\n        //     };\n        //    const sideList = side => (\n        //         <div\n        //           className={classes.list}\n        //           role=\"presentation\"\n        //         //   id=\"borderTest\"\n        //           >\n        //             <Card elevation={1} variant=\"outlined \"  id='shitCardTop1'>\n        //                 <h3 className='text-center p-4' id='useFont'>เลือกเดือน</h3>\n        //             </Card>\n        //             <Card elevation={5}>\n        //                 <div class='text-center ml-3 m-3 p-1' id='shitCardxx'>\n        //                     <DatePicker\n        //                         id='shitCardxx'\n        //                         variant=\"inline\"\n        //                         openTo=\"month\"\n        //                         orientation=\"portrait\"\n        //                         inputProps={{style: {fontFamily:'Mitr'}}} \n                    \n        //                         // animateYearScrolling='true'\n        //                         views={[\"year\", \"month\"]}\n        //                         value={SelectedDate}\n        //                         onChange={(date)=>{SetMonth(date)}}/>\n                        \n        //                     <Button variant=\"contained\" color=\"secondary\" onClick={()=>{Reload()}} size=\"large\" id='Spacing'>\n        //                     ล้างค่า\n        //                     </Button>\n        //                 </div>\n        //             </Card>\n        //         </div>\n        //       );\n    \n       \n    {/* **************** New ******************** */}  \n        const [PersoID, setPersoID] = useState([]); \n        const [Name, setName] = useState([]); \n        const [LastName, setLastName] = useState([]); \n        const [Age, setAge] = useState([]); \n        const [Genderchecked, setGenderchecked] = useState('ชาย');\n        const [AddressPerson, setAddressPerson] = useState([]); \n        const [Job, setJob] = useState([]); \n        const [Comefrom, setComefrom] = useState([]); \n\n        const [stateCheckA, setStateCheckA] = useState(0)\n        const [stateCheckB, setStateCheckB] = useState(0)\n        const [stateCheckC, setStateCheckC] = useState(0)\n        const [stateCheckD, setStateCheckD] = useState(0)\n        const [stateCheckE, setStateCheckE] = useState(0)\n        const [stateCheckF, setStateCheckF] = useState(0)\n        const [stateCheckG, setStateCheckG] = useState(0)\n        const [stateCheckH, setStateCheckH] = useState(0)\n        const [stateCheckI, setStateCheckI] = useState(0)\n        const [stateCheckJ, setStateCheckJ] = useState(0)\n        const [stateCheckK, setStateCheckK] = useState(0)\n        \n        const [Temperature, setTemperature] = useState([]); \n        const [checkedRisk, setCheckedRisk] = useState('กักตัวเพื่อรอดูอาการ');\n        const [Recorder, setRecorder] = useState([]);\n        const [RecorderWhoChangeState, setRecorderWhoChangeState] = useState([]);\n       \n        const [DateArrivedVillage, setDateArrivedVillage] = useState(new Date().toLocaleDateString()); \n        const onDateChange = (date) => {\n            const fullDate = date\n            const Day = dateFormat(fullDate, \"dd\");\n            const Month = dateFormat(fullDate, \"mm\");\n            const Year = dateFormat(fullDate, \"yyyy\");\n            const Formatted = Month +\"/\"+ Day +\"/\"+ Year\n            // console.log(\"pickdate01 : \" + fullDate)\n            // console.log(\"pickdate02 : \" + Formatted)\n            // console.log(\"SelectedDate : \" + SelectedDate)\n            setDateArrivedVillage(Formatted);\n          };\n\n    {/* **************** Accept ******************** */}  \n    const [GetIDParcel, setGetIDParcel] = useState();\n        const [AcceptPeople, setAcceptPeople] =useState();\n        const [checkedAfterquarantine, setCheckedAfterquarantine] = useState('มีความเสี่ยง');\n\n        const [Monthza, setMonthza] = useState('All'); \n        const [Yearza, setYearza] = useState('All'); \n\n {/* **************** Style ******************** */}    \n          const BoxStsProps1 = {\n            bgcolor: \"background.paper\",\n            borderColor: \"GoldenRod\",\n            color: \"GoldenRod\",\n            m: 1,\n            border: 1,\n            fontFamily:'Mitr',\n            style: { width: \"10rem\", height: \"2rem\",textAlign: \"center\" }\n          };\n          const BoxStsProps2 = {\n            bgcolor: \"background.paper\",\n            borderColor: \"Crimson\",\n            color: \"Crimson\",\n            m: 1,\n            border: 1,\n            fontFamily:'Mitr',\n            style: { width: \"7rem\", height: \"2rem\",textAlign: \"center\" }\n          };\n          const BoxStsProps3 = {\n            bgcolor: \"background.paper\",\n            borderColor: \"Green\",\n            color: \"Green\",\n            m: 1,\n            border: 1,\n            fontFamily:'Mitr',\n            style: { width: \"7rem\", height: \"2rem\",textAlign: \"center\" }\n          };\n           /*\n            ! แดง-เหลือง-เขียว indicator\n            */\n          const classes = useStyles();\n    \n{/* **************** Process function ******************** */}             \n        function GetData (item){\n            let info ={\n                    params: {\n                        id:item.ID\n                    }} \n            setGetIDParcel(item.ID)\n            \n            \n            axios.get('http://localhost:4000/SpecificDatatoAccept',info)\n                .then(function (response){\n                    const dataSpecific = response.data;\n                    console.log(dataSpecific)\n                    dataSpecific.map((item)=>\n                    setAcceptPeople(item.Name),\n                        \n            )})}\n\n        function PrePost (e){\n            e.preventDefault()\n            setTimeout(() => {\n                setOpen(false);\n                PostToDatabase();\n                }, 500);  \n                }\n    \n        function PostToDatabase (e){\n            let formData = {\n                PersoID:PersoID,\n                Name:Name,\n                LastName:LastName,\n                Age:Age,\n                Genderchecked:Genderchecked,\n                AddressPerson:AddressPerson,\n                Job:Job,\n                Comefrom:Comefrom,\n                DateArrivedVillage:DateArrivedVillage,\n                stateCheckA:stateCheckA,\n                stateCheckB:stateCheckB,\n                stateCheckC:stateCheckC,\n                Temperature:Temperature,\n                stateCheckD:stateCheckD,\n                stateCheckE:stateCheckE,\n                stateCheckF:stateCheckF,\n                stateCheckG:stateCheckG,\n                stateCheckH:stateCheckH,\n                stateCheckI:stateCheckI,\n                stateCheckJ:stateCheckJ,\n                stateCheckK:stateCheckK,\n                checkedRisk:checkedRisk,\n                Recorder:Recorder,\n                DateTimeNow:DateTimeNow\n            }\n    \n            axios.post('http://localhost:4000/PostToDatabase', formData)\n                .then(function (response) {\n                    console.log(response);\n              })\n                .catch(function (error) {\n                    console.log(error);\n              });\n    \n              TimeRanger();\n              \n              setTimeout(() => {\n                updateValue ()\n                alert('เพิ่มแบบสำรวจสำเร็จ')\n                Clearfield ()\n                // window.location.reload(false)\n                }, 500);  \n                }\n\n        function Clearfield (){\n            setPersoID([])\n            setName([])\n            setLastName([])\n            setAge([])\n            setGenderchecked('ชาย');\n            setAddressPerson([])\n            setJob([])\n            setComefrom([])\n            setStateCheckA(0)\n            setStateCheckB(0)\n            setStateCheckC(0)\n            setStateCheckD(0)\n            setStateCheckE(0)\n            setStateCheckF(0)\n            setStateCheckG(0)\n            setStateCheckH(0)\n            setStateCheckI(0)\n            setStateCheckJ(0)\n            setStateCheckK(0)\n            setTemperature([])\n            setCheckedRisk('กักตัวเพื่อรอดูอาการ');\n            setRecorder([])\n            setRecorderWhoChangeState([])\n            setDateArrivedVillage(new Date().toLocaleDateString()); \n        }\n    \n        function Quarantine (){\n            var info ={\n                params: {\n                    Monthza:Monthza,\n                    Yearza:Yearza\n                }}\n    \n            return axios.get('http://localhost:4000/Quarantine',info) \n            .then(function (response) {\n                const data = response.data;\n                // console.table(data)\n                setDataBoxLeft(data);\n                \n                })}\n\n        function YouRiskNow (){\n            var info ={\n                params: {\n                    Monthza:Monthza,\n                    Yearza:Yearza\n                }}\n    \n            return axios.get('http://localhost:4000/YouRiskNow',info) \n            .then(function (response) {\n                const data = response.data;\n                // console.table(data)\n                setDataBoxMid(data);\n                \n                })}\n        function NoCovid (){\n            var info ={\n                params: {\n                    Monthza:Monthza,\n                    Yearza:Yearza\n                }}\n    \n            return axios.get('http://localhost:4000/NoCovid',info) \n            .then(function (response) {\n                const data = response.data;\n                // console.table(data)\n                setDataBoxRight(data);\n                \n                })}\n                \n        function Accept (){\n            var accept ={\n                id:GetIDParcel,\n                RecorderWhoChangeState:RecorderWhoChangeState,\n                Check:checkedAfterquarantine}\n            axios.put('http://localhost:4000/Accept',accept)\n                .then(function (response){\n                    // ohWow();  \n            })}\n\n        function updateValue (){\n            Quarantine ()\n            YouRiskNow ()\n            NoCovid ()\n        }\n\n        const Onloadxx =()=>{\n            MenuAddress();\n            updateValue ()\n            TimeRanger();\n        handleClickxxB3();\n        handleClickxxB2();\n        handleClickxxB1();\n        }\n\n        const MenuAddress =()=>{\n            axios.get('http://localhost:4000/address')\n            .then(function(response){\n                const dataAddress = response.data;\n                const DropdownAddress = dataAddress.map((item) =>\n                        <option \n                        key={ item.ID_ADDRESS } \n                        value={ item.Address_Name} \n                        // onChange={ ()=> { setAddressza(item.Address_Name) }} \n                        fullwidth >\n                            { item.Address_Name}\n                    </option>)\n                    setShowAddressxx(DropdownAddress)}\n                   )}\n        \n        function TimeRanger(){\n            var DateTime = moment().format('L') +' '+moment().format('LT');\n            var Day = moment().format('DD');  \n            var Month = moment().format('MMMM'); \n            var Year = moment().format('YYYY');  \n            setDateTimeNow(DateTime)\n            setMonthx(Month)\n            setYearx(Year)\n            }\n    \n        // function SetMonth(date){\n        //     console.log(date)\n        //     var fullDate = date\n        //     setDateArrivedVillage(fullDate)\n        //     var Day = dateFormat(fullDate, \"mmmm\");\n        //     var Month = dateFormat(fullDate, \"mmmm\");\n        //     var Year = dateFormat(fullDate, \"yyyy\");\n        //     // setMonthza(Month)\n        //     // setYearza(Year)\n        //     // console.log(fullDate)\n        //     console.log(Day)\n        //     console.log(Month)\n        //     console.log(Year)\n        //     // OhSend();\n        //     // OhReceived ();\n        //     // แก้ทีหลัง\n        //     }\n        //     /*\n        //         !Select month side bar\n        //     */\n\n        function SelectAccept(item){\n            GetData (item);\n            handleClickOpenConfirmAccept();\n            }\n             /*\n                !ClickToAccept\n            */\n    \n        const handleClickOpen = () => {\n            setOpen(true);\n        };\n        const handleClose = () => {\n            setOpen(false);\n            // window.location.reload(false);\n            Clearfield ()\n            updateValue ()\n        };\n        /*\n            !Open-Close Dialog\n        */\n    \n        const handleClickOpenConfirmAccept = () => {\n                setOpenconfirmAccept(true);\n        };\n        const handleClickCloseConfirmAccept = () => {\n            setOpenconfirmAccept(false);\n        };\n        const handleClickCloseConfirmAcceptWihtAccept= (e) => {\n            e.preventDefault()\n            Accept();\n            setOpenconfirmAccept(false);\n            // window.location.reload(false);\n            updateValue ()\n            alert(\"ผู้แก้ไขผล : \"+ RecorderWhoChangeState)\n        };\n        /*\n            !Open-Close-Submit Accept Dialog\n        */\n\n    \n        useEffect(() => {\n            Onloadxx()\n            // setTimeout(() => {\n            //     console.log('Hello, World!')\n            //   }, 3000);\n\n            // console.log(DateTimeNow)\n            // console.log(\"UseEffect\")\n            // console.log(SelectedDate)\n            // console.log(\"Year\")\n            // console.log(Yearza)\n            // console.log(...DataBoxLeft)\n            // console.log(...DataBoxMid)\n            // console.log(\"เลขบัตร :\" + PersoID)\n            // console.log(\"ชื่อ :\" + Name)\n            // console.log(\"สกุล :\" + LastName)\n            // console.log(\"อายุ :\" + Age)\n            // console.log(\"เพศ :\" + Genderchecked)\n            // console.log(\"ที่อยู่ :\" + AddressPerson)\n            // console.log(\"อาชีพ :\" + Job)\n            // console.log(\"เดินทางมาจาก :\" + Comefrom)\n            // console.log(\"วันที่เข้าหมู่บ้าน :\" + DateArrivedVillage)\n            // console.table(stateCheckA)\n            // console.log(\"อุณหภูมิ :\" + Temperature)\n            // console.table(\"ระบุผล :\" + checkedRisk)\n            // console.table(\"ผู้รายงาน :\" + Recorder)\n\n        }, [])\n\n        useEffect(()=>{\n            // console.log(...DataBoxMid)\n        })\n\n    return (\n\n       <Fragment>\n            {/* Page Wrapper */}\n\n{/* **************** Sidebar ******************** */}\n                {/* Sidebar */}\n                <SideBar/>\n\n{/* **************** Content ******************** */}\n                {/* Content Wrapper */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n{/* **************** TopBar ******************** */}\n                    {/* Topbar */}\n                    <Header/>\n\n{/* **************** Main ******************** */}\n                    {/* Main Content */}\n                    <div id=\"content\">\n   \n    {/* **************** ContentBox ******************** */}\n\n                        {/* Begin Page Content */}\n                        <div className=\"container-fluid\">\n                            {/* Page Heading */}\n                            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                                <h1 className=\"h1 mb-0 text-gray-800\">New Case</h1>\n                               \n                            </div>\n                            <div className=\"btn btn-lg btn-info\" onClick={()=> window.location.reload(false)} id='useFont'>Refresh ข้อมูล</div>\n\n        {/* **************** Cards ******************** */}\n                            {/* Content Row */}\n                            <div className=\"row\">\n\n            {/* **************** Cards1 ******************** */}            \n                                {/* Earnings (Monthly) Card Example */}\n                                <div className=\"col-xl-12 col-md-11 mb-4 ml-3 \">\n                                    <Grid item xs={12} sm={12} md={12} lg={4} xl={3} >\n                                        <Card \n                                        elevation={5} \n                                        variant=\"outlined \" \n                                        className='my-5 col  col-md-5 col-lg-5 col-xl-12' \n                                        onClick={handleClickOpen}\n                                        id='shitCardxx'>\n                                            <h2 className='pl-5 my-1 ' ></h2>\n                                            <div class='col col-5 col-md-5 col-sm-12 col-xs-12'>\n                                                <img style={{ width: \"100%\"}} src={survey}/>\n                                                <br/><br/>\n                                                </div>\n                                            <div class='horizonLine2'/>\n                                            <h4 className='my-3 ml-5 ' id='useFont2'>เพิ่มแบบสำรวจ</h4>\n                                            \n                                            <br/>\n                                        </Card>\n                                        \n                                        \n                                        \n                                    </Grid><br/><br/>\n\n                                    <Grid container spacing={5}>\n                                        <Grid item xs={12} sm={11} md={12} lg={4} xl={3} >\n                                                <Card elevation={5} variant=\"outlined \" className='my-2' id='shitCardNext1'>\n                                                    <Card elevation={1} variant=\"outlined \"  id='shitCardTop1' onClick={()=>{handleClickxxB1(\"B1\")}}>\n                                                        <h4 \n                                                        className='text-center p-4' \n                                                        id='useFont'>กักตัวเพื่อรอดูอาการ {\" \"} \n                                                        <Badge \n                                                        badgeContent={DataBoxLeft.length} \n                                                        color=\"secondary\">\n                                                        </Badge>\n                                                        </h4>\n                                                    </Card>\n                                                        <Collapse key={'B1'} in={openB1['B1']}>\n                                                        <List>\n                                                            {DataBoxLeft.map(item=>{\n                                                                // console.log(item)\n                                                                // console.table(item.status)\n                                                                return(\n                                                                <div class='border border-top-0'>\n                                                                    <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                                                    <ListItemAvatar>\n                                                                    <Avatar>\n                                                                    </Avatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText  key ={item.ID} >\n                                                                            \n                                                                            {item.checkedRisk==\"กักตัวเพื่อรอดูอาการ\"?\n                                                                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                                                <Box borderRadius={30} {...BoxStsProps1} >กักตัวเพื่อรอดูอาการ</Box>\n                                                                            </Box>:null}\n                                                                            \n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{ item.Comefrom }</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{ item.DateArrivedVillage }</span><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{ item.Temperature }{\" \"}{\"°C\"}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้ตรวจ:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                        </ListItemText>\n                                                                    </ListItem>\n                                                                    \n                                                                    <Collapse key={item.ID} in={openx[item.ID]}>\n                                                                    <div class='horizonLine3'/>\n                                                                        <ListItem key={item.ID}>\n                                                                    <ListItemAvatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText key ={item.ID}>\n                                                                            <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                                            <strong id='useFont'>{'เลขบัตรประชาชน:'+' '}</strong><span id='useFont2'>{item.Personal_ID}</span><br/>\n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'อายุ:'+' '}</strong><span id='useFont2'>{item.Age}</span><br/>\n                                                                            <strong id='useFont'>{'เพศ:'+' '}</strong><span id='useFont2'>{item.Genderchecked}</span><br/>\n                                                                            <strong id='useFont'>{'ที่อยู่:'+' '}</strong><span id='useFont2'>{item.AddressPerson}</span><br/>\n                                                                            <strong id='useFont'>{'อาชีพ:'+' '}</strong><span id='useFont2'>{item.Job}</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{item.Comefrom}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{item.DateArrivedVillage}</span><br/>\n                                                                            <h6 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h6>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedA} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่เสี่ยง\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedB} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่ที่มีคนมาก\"/><br/>   \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedC} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ใกล้ชิดผู้ป่วย\"/><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{item.Temperature}</span><br/>            \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedD} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดศีรษะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedE} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedF} disabled className=\"ml-5\" color=\"primary\"/>} label=\"มีเสมหะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedG} disabled className=\"ml-5\" color=\"primary\"/>} label=\"เจ็บคอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedH} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดกล้ามเนื้อ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedI} disabled className=\"ml-5\" color=\"primary\"/>} label=\"หายใจลำบาก\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedJ} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ท้องเสีย\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedK} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/><br/>     \n                                                                            <strong id='useFont'>{'ระบุผล:'+' '}</strong><span id='useFont2'>{item.checkedRisk}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้รายงาน:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n\n                                                                            <div className='row'>\n                                                                            <div class=\"col col-4\"></div>\n                                                                            <div class=\"col col-4\"></div>\n                                                                                <div className='row col my-2'>\n                                                                                    <div className='row'>\n                                                                                        <div>\n                                                                                            {item.checkedRisk==\"กักตัวเพื่อรอดูอาการ\"?\n                                                                                            <Alert \n                                                                                                key ={item.ID} \n                                                                                                id='AlertButton'\n                                                                                                severity=\"info\"\n                                                                                                onClick={ ()=>{ SelectAccept(item) } }>\n                                                                                                <AlertTitle id='useFont'>แก้ไขผล</AlertTitle>\n                                                                                            </Alert> :null\n                                                                                            }\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </ListItemText>\n                                                                        </ListItem>\n                                                            </Collapse>\n                                                            <Divider />\n                                                            </div>\n                                                            )})}\n                                                        </List>\n                                                        \n                                                        </Collapse>\n                                                </Card>\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={11} md={12} lg={4} xl={3} >\n                                                <Card elevation={5} variant=\"outlined \" className='my-2' id='shitCardNext1'>\n                                                    <Card elevation={1} variant=\"outlined \"  id='shitCardTop1' onClick={()=>{handleClickxxB2(\"B2\")}}>\n                                                        <h4 \n                                                        className='text-center p-4' \n                                                        id='useFont'>มีความเสี่ยง {\" \"} \n                                                        <Badge \n                                                        badgeContent={DataBoxMid.length} \n                                                        color=\"secondary\">\n                                                        </Badge>\n                                                        </h4>\n                                                    </Card>\n                                                        <Collapse key={'B2'} in={openB2['B2']}>\n                                                        <List>\n                                                            {DataBoxMid.map(item=>{\n                                                                // console.log(item)\n                                                                // console.table(item.status)\n                                                                return(\n                                                                <div class='border border-top-0'>\n                                                                    <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                                                    <ListItemAvatar>\n                                                                    <Avatar>\n                                                                    </Avatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText  key ={item.ID} >\n                                                                            \n                                                                            {item.checkedRisk==\"มีความเสี่ยง\"?\n                                                                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                                                <Box borderRadius={30} {...BoxStsProps2} >มีความเสี่ยง</Box>\n                                                                            </Box>:null}\n                                                                            \n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{ item.Comefrom }</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{ item.DateArrivedVillage }</span><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{ item.Temperature }{\" \"}{\"°C\"}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้ตรวจ:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                        </ListItemText>\n                                                                    </ListItem>\n                                                                    \n                                                                    <Collapse key={item.ID} in={openx[item.ID]}>\n                                                                    <div class='horizonLine3'/>\n                                                                        <ListItem key={item.ID}>\n                                                                    <ListItemAvatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText key ={item.ID}>\n                                                                            <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                                            <strong id='useFont'>{'เลขบัตรประชาชน:'+' '}</strong><span id='useFont2'>{item.Personal_ID}</span><br/>\n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'อายุ:'+' '}</strong><span id='useFont2'>{item.Age}</span><br/>\n                                                                            <strong id='useFont'>{'เพศ:'+' '}</strong><span id='useFont2'>{item.Genderchecked}</span><br/>\n                                                                            <strong id='useFont'>{'ที่อยู่:'+' '}</strong><span id='useFont2'>{item.AddressPerson}</span><br/>\n                                                                            <strong id='useFont'>{'อาชีพ:'+' '}</strong><span id='useFont2'>{item.Job}</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{item.Comefrom}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{item.DateArrivedVillage}</span><br/>\n                                                                            <h5 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h5>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedA} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่เสี่ยง\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedB} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่ที่มีคนมาก\"/><br/>   \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedC} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ใกล้ชิดผู้ป่วย\"/><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{item.Temperature}</span><br/>            \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedD} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดศีรษะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedE} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedF} disabled className=\"ml-5\" color=\"primary\"/>} label=\"มีเสมหะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedG} disabled className=\"ml-5\" color=\"primary\"/>} label=\"เจ็บคอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedH} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดกล้ามเนื้อ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedI} disabled className=\"ml-5\" color=\"primary\"/>} label=\"หายใจลำบาก\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedJ} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ท้องเสีย\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedK} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/><br/>     \n                                                                            <strong id='useFont'>{'ระบุผล:'+' '}</strong><span id='useFont2'>{item.checkedRisk}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้รายงาน:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้แก้ไขผล:'+' '}</strong><span id='useFont2'>{item.RecorderWhoChangeState}</span><br/>\n\n                                                                        </ListItemText>\n                                                                        </ListItem>\n                                                            </Collapse>\n                                                            <Divider />\n                                                            </div>\n                                                            )})}\n                                                        </List>\n                                                        \n                                                        </Collapse>\n                                                </Card>\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={11} md={12} lg={4} xl={3} >\n                                                <Card elevation={5} variant=\"outlined \" className='my-2' id='shitCardNext1'>\n                                                    <Card elevation={1} variant=\"outlined \"  id='shitCardTop1' onClick={()=>{handleClickxxB3(\"B3\")}}>\n                                                        <h4 \n                                                        className='text-center p-4' \n                                                        id='useFont'>ไม่มีอาการ {\" \"} \n                                                        <Badge \n                                                        badgeContent={DataBoxRight.length} \n                                                        color=\"secondary\">\n                                                        </Badge>\n                                                        </h4>\n                                                    </Card>\n                                                        <Collapse key={'B3'} in={openB3['B3']}>\n                                                        <List>\n                                                            {DataBoxRight.map(item=>{\n                                                                // console.log(item)\n                                                                // console.table(item.status)\n                                                                return(\n                                                                <div class='border border-top-0'>\n                                                                    <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                                                    <ListItemAvatar>\n                                                                    <Avatar>\n                                                                    </Avatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText  key ={item.ID} >\n                                                                            \n                                                                            {item.checkedRisk==\"ไม่มีอาการ\"?\n                                                                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                                                <Box borderRadius={30} {...BoxStsProps3} >ไม่มีอาการ</Box>\n                                                                            </Box>:null}\n                                                                            \n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{ item.Comefrom }</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{ item.DateArrivedVillage }</span><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{ item.Temperature }{\" \"}{\"°C\"}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้ตรวจ:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                        </ListItemText>\n                                                                    </ListItem>\n                                                                    \n                                                                    <Collapse key={item.ID} in={openx[item.ID]}>\n                                                                    <div class='horizonLine3'/>\n                                                                        <ListItem key={item.ID}>\n                                                                    <ListItemAvatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText key ={item.ID}>\n                                                                            <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                                            <strong id='useFont'>{'เลขบัตรประชาชน:'+' '}</strong><span id='useFont2'>{item.Personal_ID}</span><br/>\n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'อายุ:'+' '}</strong><span id='useFont2'>{item.Age}</span><br/>\n                                                                            <strong id='useFont'>{'เพศ:'+' '}</strong><span id='useFont2'>{item.Genderchecked}</span><br/>\n                                                                            <strong id='useFont'>{'ที่อยู่:'+' '}</strong><span id='useFont2'>{item.AddressPerson}</span><br/>\n                                                                            <strong id='useFont'>{'อาชีพ:'+' '}</strong><span id='useFont2'>{item.Job}</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{item.Comefrom}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{item.DateArrivedVillage}</span><br/>\n                                                                            <h5 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h5>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedA} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่เสี่ยง\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedB} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่ที่มีคนมาก\"/><br/>   \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedC} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ใกล้ชิดผู้ป่วย\"/><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{item.Temperature}</span><br/>            \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedD} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดศีรษะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedE} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedF} disabled className=\"ml-5\" color=\"primary\"/>} label=\"มีเสมหะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedG} disabled className=\"ml-5\" color=\"primary\"/>} label=\"เจ็บคอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedH} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดกล้ามเนื้อ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedI} disabled className=\"ml-5\" color=\"primary\"/>} label=\"หายใจลำบาก\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedJ} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ท้องเสีย\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedK} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/><br/>     \n                                                                            <strong id='useFont'>{'ระบุผล:'+' '}</strong><span id='useFont2'>{item.checkedRisk}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้รายงาน:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n\n                                                                        </ListItemText>\n                                                                        </ListItem>\n                                                            </Collapse>\n                                                            <Divider />\n                                                            </div>\n                                                            )})}\n                                                        </List>\n                                                        \n                                                        </Collapse>\n                                                </Card>\n                                        </Grid>\n\n                                    </Grid>\n\n                                </div>\n                                {/* Pending Requests Card Example */}\n  \n                            </div>\n                            {/* Content Row */}\n                            <div className=\"row\">\n                                {/* Area Chart */}\n\n                                {/* Pie Chart */}\n                                <div className=\"col-xl-4 col-lg-5\">\n\n                                </div>\n                            </div>\n                            {/* Content Row */}\n                        </div>\n                        {/* /.container-fluid */}\n                    </div>\n\n{/* **************** Footer ******************** */}\n                    {/* Footer */}\n                    <Footer/>\n                </div>\n\n{/* ******************************** End Return ************************************ */}      \n            \n{/* **************** Dialog ******************** */}            \n            <Dialog \n            fullWidth \n            open={open} \n            id='Dialog'\n            TransitionComponent={Transition}\n            className='p-5' \n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\" \n            class='container col col-sm-4 col-md-12 col-xl-8'\n            >\n                <DialogTitle \n                id=\"form-dialog-title\" \n                className='text-center mt-3'>\n                    <h1 id='useFont'>แบบสำรวจผู้มีความเสี่ยงในพื้นที่ </h1>\n                    <img style={{ width: \"20%\"}} src={survey}/>\n                </DialogTitle><hr/>\n                <DialogContent>\n                \n                <form\n                id=\"SEND\"\n                name=\"SEND\"\n                onSubmit={ PrePost }>\n                    <TextField \n                    required \n                    autoFocus\n                    fullWidth\n                    type=\"text\"\n                    label=\"เลขบัตรประชาชน\" \n                    // id=\"nameSender\" \n                    variant=\"outlined\" \n                        inputProps={{minLength: 13  ,maxLength: 13, style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                            value={ PersoID }\n                            onChange={ event =>  setPersoID(event.target.value) }\n                    />\n                    <br/><br/>\n\n                    <TextField \n                    required \n                    // fullWidth\n                    type=\"text\"\n                    label=\"ชื่อ\" \n                    // id=\"nameSender\" \n                    variant=\"outlined\" \n                        inputProps={{style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                            value={ Name }\n                            onChange={ event =>  setName(event.target.value) }\n                    />\n                    <span>   </span>\n\n                    <TextField \n                    required \n                    // fullWidth\n                    type=\"text\"\n                    label=\"นามสกุล\" \n                    // id=\"nameSender\" \n                    variant=\"outlined\" \n                        inputProps={{style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                            value={ LastName }\n                            onChange={ event =>  setLastName(event.target.value) }\n                    />\n                    <br/><br/>\n\n                    <TextField \n                    required \n                    // fullWidth\n                    type=\"number\"\n                    label=\"อายุ\" \n                    // id=\"nameSender\" \n                    variant=\"outlined\" \n                        inputProps={{min: 1, maxLength: 3, style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                            value={ Age }\n                            onChange={ event =>  setAge(event.target.value) }\n                    />\n                    <br/><br/>\n\n                    <FormLabel component=\"legend\" id='useFont'>เพศ</FormLabel>\n                    <Radio\n                        checked={Genderchecked === 'ชาย'}\n                        onChange={ event =>  setGenderchecked(event.target.value) }\n                        value=\"ชาย\"\n                        color='primary'\n                        name=\"radio-button-demo\"\n                        inputProps={{ 'aria-label': 'A' }}\n                    /><span id='useFont'>ชาย</span>\n                    <Radio\n                        checked={Genderchecked === 'หญิง'}\n                        onChange={ event =>  setGenderchecked(event.target.value) }\n                        value=\"หญิง\"\n                        color='secondary'\n                        name=\"radio-button-demo\"\n                        inputProps={{ 'aria-label': 'B' }}\n                    /><span id='useFont'>หญิง</span>\n                    <br/><br/>\n\n                    <TextField\n                        required\n                        fullWidth\n                        id=\"outlined-textarea\"\n                        label=\"ที่อยู่\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        inputProps={{style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}}\n                            value={ AddressPerson }\n                            onChange={ event =>  setAddressPerson(event.target.value) }\n                    />\n                    <br/><br/>\n\n                    <TextField \n                    required \n                    // fullWidth\n                    type=\"text\"\n                    label=\"อาชีพ\" \n                    // id=\"nameSender\" \n                    variant=\"outlined\" \n                        inputProps={{style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                            value={ Job }\n                            onChange={ event =>  setJob(event.target.value) }\n                    />\n                    <br/><br/>\n\n                    <FormControl required id='formControl'>\n                    <InputLabel htmlFor=\"age-native-simple\" id='useFont'>เดินทางมาจาก</InputLabel>\n                        <Select \n                        native\n                        required \n                        // fullwidth\n                        id=\"addressdropdown\" \n                        className='col col-11' \n                        select \n                        label=\"เดินทางมาจาก\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Comefrom } \n                                onChange={ event =>  setComefrom(event.target.value) } \n                        >\n                            { ShowAddressxx } \n                        </Select>\n                    </FormControl>\n                    <br/><br/>\n                    \n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                        required \n                        // autoOk\n                        id=\"JustPointer\"\n                        variant=\"inline\"\n                        label=\"วันที่เข้าหมุ่บ้าน (เดือน/วัน/ปี)\"\n                        className='col col-6' \n                        value={DateArrivedVillage}\n                        format=\"MM/dd/yyyy\"\n                        onChange={date => onDateChange(date)}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <br/><br/>\n\n                    <h5 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h5>\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckA}\n                            onChange={ event =>  setStateCheckA(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckA\"\n                            color=\"primary\"\n                    />}label=\"ไปสถานที่เสี่ยง\"/>\n                    <br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckB}\n                            onChange={ event =>  setStateCheckB(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckB\"\n                            color=\"primary\"\n                    />}label=\"ไปสถานที่ที่มีคนมาก\"/>\n                    <br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckC}\n                            onChange={ event =>  setStateCheckC(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckC\"\n                            color=\"primary\"\n                    />}label=\"ใกล้ชิดผู้ป่วย\"/>\n                    <br/><br/>\n\n                    <TextField \n                    required \n                    // fullWidth\n                    type=\"number\"\n                    label=\"อุณหภูมิ\" \n                    className=\"col col-4\"\n                    // id=\"nameSender\" \n                    variant=\"outlined\" \n                        inputProps={{min: 35, max: 45, maxLength: 3, step:\"0.1\", style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                            value={ Temperature }\n                            onChange={  event =>  setTemperature(event.target.value)  }\n                    />\n                    <br/><br/>\n                    \n                    <h5 id=\"useFont\" className=\"ml-3\">อาการ</h5>\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckD}\n                            onChange={ event =>  setStateCheckD(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckD\"\n                            color=\"primary\"\n                    />}label=\"ปวดศีรษะ\"/><br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckE}\n                            onChange={ event =>  setStateCheckE(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckE\"\n                            color=\"primary\"\n                    />}label=\"ไอ\"/><br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckF}\n                            onChange={ event =>  setStateCheckF(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckF\"\n                            color=\"primary\"\n                    />}label=\"มีเสมหะ\"/><br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckG}\n                            onChange={ event =>  setStateCheckG(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckG\"\n                            color=\"primary\"\n                    />}label=\"เจ็บคอ\"/><br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckH}\n                            onChange={ event =>  setStateCheckH(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckH\"\n                            color=\"primary\"\n                    />}label=\"ปวดกล้ามเนื้อ\"/><br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckI}\n                            onChange={ event =>  setStateCheckI(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckI\"\n                            color=\"primary\"\n                    />}label=\"หายใจลำบาก\"/><br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckJ}\n                            onChange={ event =>  setStateCheckJ(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckJ\"\n                            color=\"primary\"\n                    />}label=\"ท้องเสีย\"/><br/>\n\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            checked={stateCheckK}\n                            onChange={ event =>  setStateCheckK(event.target.checked) }\n                            className=\"ml-5\"\n                            name=\"stateCheckK\"\n                            color=\"primary\"\n                    />}label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/>\n                    <br/><br/>\n\n                    <h5 id=\"useFont\" className=\"ml-3\">ระบุผล</h5>\n                    <Radio\n                        checked={checkedRisk === 'กักตัวเพื่อรอดูอาการ'}\n                        onChange={ event =>  setCheckedRisk(event.target.value) }\n                        className=\"ml-5\"\n                        value=\"กักตัวเพื่อรอดูอาการ\"\n                        color='primary'\n                        name=\"radio-button-demo\"\n                        inputProps={{ 'aria-label': 'A' }}\n                    /><span id='useFont'>กักตัวเพื่อรอดูอาการ</span>\n                    <Radio\n                        checked={checkedRisk === 'มีความเสี่ยง'}\n                        onChange={ event =>  setCheckedRisk(event.target.value) }\n                        className=\"ml-1\"\n                        value=\"มีความเสี่ยง\"\n                        color='secondary'\n                        name=\"radio-button-demo\"\n                        inputProps={{ 'aria-label': 'B' }}\n                    /><span id='useFont'>มีความเสี่ยง</span>\n                    <br/><br/>\n\n                    <TextField \n                    required \n                    fullWidth\n                    type=\"text\"\n                    label=\"ผู้รายงาน\" \n                    // id=\"nameSender\" \n                    variant=\"outlined\" \n                        inputProps={{style: {fontFamily:'Mitr'}}} \n                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                            value={ Recorder }\n                            onChange={  event =>  setRecorder(event.target.value)  }\n                    />\n                    <br/><br/>\n                    </form>\n                </DialogContent>\n                \n                <DialogActions>\n                <br/><br/><br/><br/>\n                <Button \n                id='useFont'\n                size=\"large\" \n                color=\"secondary\"\n                variant=\"contained\" \n                onClick={ handleClose }  \n                >\n                    ยกเลิก\n                </Button>\n\n                <Button \n                form=\"SEND\"\n                id='useFont'\n                size=\"large\" \n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\" \n                >\n                    เพิ่ม\n                </Button>\n                </DialogActions>\n            </Dialog>\n\n{/* **************** AcceptDialog ******************** */}  \n    <div className='containter row pl-2'>       \n            <div >\n                    <Dialog fullWidth \n                    TransitionComponent={Transition2}\n                        open={OpenconfirmAccept} onClose={handleClickCloseConfirmAccept} \n                        aria-labelledby=\"form-dialog-title\" id='Dialog2'>\n                            <h3 id='useFont' className='ml-4 mt-4 mb-3'>แก้ไขผล</h3>\n                            <DialogContent>\n                                <DialogContentText id='useFont'>\n                                    ต้องการเปลี่ยนสถานะของ <strong >{AcceptPeople}</strong>  โปรดกรอกชื่อและกดปุ่ม <strong>\"ยืนยัน\"</strong>.\n                                </DialogContentText>\n                                <form id=\"SENDACC\" name=\"SENDACC\" onSubmit={ handleClickCloseConfirmAcceptWihtAccept }>\n                                    <TextField\n                                        required\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"name\"\n                                        label=\"ผู้แก้ไขผล\"\n                                        inputProps={{style: {fontFamily:'Mitr'}}} \n                                        InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                        value={ RecorderWhoChangeState }\n                                        onChange={ event =>  setRecorderWhoChangeState(event.target.value) }\n                                        type=\"text\"\n                                        fullWidth\n                                    />\n                                        <br/><br/>\n                                        {/* <Checkbox\n                                            checked={checked}\n                                            onChange={handleChange}\n                                            value=\"primary\"\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        /> */}\n                                        <p id='useFont'>ต้องการเปลี่ยนสถานะเป็น</p>\n                                        <Radio\n                                        \n                                            checked={checkedAfterquarantine === 'ไม่มีอาการ'}\n                                            onChange={ event =>  setCheckedAfterquarantine(event.target.value) }\n                                            value=\"ไม่มีอาการ\"\n                                            color='primary'\n                                            name=\"radio-button-demo\"\n                                            inputProps={{ 'aria-label': 'A' }}\n                                        /><span id='useFont'>ไม่มีอาการ</span>\n                                        <Radio\n                                            checked={checkedAfterquarantine === 'มีความเสี่ยง'}\n                                            onChange={ event =>  setCheckedAfterquarantine(event.target.value) }\n                                            value=\"มีความเสี่ยง\"\n                                            color='secondary'\n                                            name=\"radio-button-demo\"\n                                            inputProps={{ 'aria-label': 'B' }}\n                                        /><span id='useFont'>มีความเสี่ยง</span>\n                                        \n                                </form>\n                            </DialogContent>\n                            \n                            <DialogActions>\n                            <Button \n                                id='AlertButton2' \n                                variant=\"contained\" \n                                color=\"secondary\"\n                                size=\"large\"\n                                onClick={handleClickCloseConfirmAccept}><AlertTitle id='useFont'>ยกเลิก</AlertTitle>\n                            </Button>\n                            <Button \n                                form=\"SENDACC\"\n                                type=\"submit\"\n                                id='AlertButton' \n                                variant=\"contained\" \n                                color=\"primary\"\n                                size=\"large\"\n                                // onClick={handleClickCloseConfirmAcceptWihtAccept}\n                                >\n                                    <AlertTitle id='useFont'>ยืนยัน</AlertTitle>\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                </div>  \n</Fragment>\n\n       \n    )\n}\nexport default NewCase","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n           \n        </div>\n    )\n}\n\nexport default About\n\n\n","import React, { Fragment,useState, useEffect } from 'react'\nimport { Link ,Redirect} from 'react-router-dom';\nimport Header from './Parts/Header';\nimport SideBar from './Parts/SideBar';\nimport Footer from './Parts/Footer';\n\nconst NotFoundPage =()=>{\n    return(\n        <Fragment>\n\n{/* **************** Sidebar ******************** */}\n        {/* Sidebar */}\n        <SideBar/>\n\n{/* **************** Content ******************** */}\n        {/* Content Wrapper */}\n        <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n\n{/* **************** TopBar ******************** */}\n        {/* Topbar */}\n        <Header/>\n\n{/* **************** Main ******************** */}\n            {/* Main Content */}\n            <div id=\"content\">\n    \n                {/* 404 Error Text */}\n                <div className=\"text-center\">\n                    <div className=\"error mx-auto\" data-text={404}>404</div>\n                    <p className=\"lead text-gray-800 mb-5\">Page Not Found</p>\n                        <Link to =\"/\">← Back to Dashboard</Link>\n                </div>\n\n            </div>\n\n{/* **************** Footer ******************** */}\n                {/* Footer */}      \n        <Footer/>\n        </div>\n\n        </Fragment>\n    )\n}\n\nexport default NotFoundPage","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as HashRouter, Router, Route, Switch } from 'react-router-dom';\nimport Home from './Pages/Home';\nimport NewCase from './Pages/NewCase';\nimport About from './Pages/About';\nimport NotFoundPage from './Pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <div id=\"wrapper\">\n      {/* <HashRouter > */}\n    {/* <Router> */}\n     \n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/NewCase\" component={NewCase} />\n          <Route exact path=\"/About\" component={About} />\n          <Route component={NotFoundPage} />\n        </Switch>\n       \n      {/* </Router> */}\n      {/* </HashRouter> */}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Home from './Pages/Home';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}