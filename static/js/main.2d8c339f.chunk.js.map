{"version":3,"sources":["Pages/Components/survey.svg","Pages/Components/male.svg","Pages/Components/female.svg","Pages/Components/fever.svg","Pages/Components/exercise.svg","Pages/Components/patient.svg","Pages/Components/funeral.svg","Pages/Home.js","Pages/NewCase.js","Pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","useState","setTableCovid","Confirmed","setConfirmed","NewConfirmed","setNewConfirmed","Recovered","setRecovered","Hospitalized","setHospitalized","NewHospitalized","setNewHospitalized","Deaths","setDeaths","NewRecovered","setNewRecovered","NewDeaths","setNewDeaths","UpdateDate","setUpdateDate","setProvince","Gender","setGender","DailyData","setDailyData","formatValue","value","toFixed","anime","targets","translateX","Onloadxx","axios","get","then","response","QueryData","data","Data","Province","moment","format","subtract","calendar","useEffect","className","id","class","href","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","to","duration","style","width","opacity","src","fever","exercise","patient","funeral","Selected7Days","slice","height","dataKey","stroke","wrapperStyle","backgroundColor","strokeDasharray","name","fill","barSize","ChartNCandNR","verticalAlign","male","Male","female","Female","useStyles","makeStyles","list","dateFormat","require","Transition","React","forwardRef","props","ref","Slide","direction","Transition2","NewCase","open","setOpen","OpenconfirmAccept","setOpenconfirmAccept","ShowAddressxx","setShowAddressxx","DateTimeNow","setDateTimeNow","setMonthx","setYearx","DataBoxLeft","setDataBoxLeft","DataBoxMid","setDataBoxMid","DataBoxRight","setDataBoxRight","openx","setOpenx","handleClickxx","item","console","log","ID","openB1","setOpenB1","handleClickxxB1","openB2","setOpenB2","handleClickxxB2","openB3","setOpenB3","handleClickxxB3","PersoID","setPersoID","Name","setName","LastName","setLastName","Age","setAge","Genderchecked","setGenderchecked","AddressPerson","setAddressPerson","Job","setJob","Comefrom","setComefrom","stateCheckA","setStateCheckA","stateCheckB","setStateCheckB","stateCheckC","setStateCheckC","stateCheckD","setStateCheckD","stateCheckE","setStateCheckE","stateCheckF","setStateCheckF","stateCheckG","setStateCheckG","stateCheckH","setStateCheckH","stateCheckI","setStateCheckI","stateCheckJ","setStateCheckJ","stateCheckK","setStateCheckK","Temperature","setTemperature","checkedRisk","setCheckedRisk","Recorder","setRecorder","RecorderWhoChangeState","setRecorderWhoChangeState","Date","toLocaleDateString","DateArrivedVillage","setDateArrivedVillage","GetIDParcel","setGetIDParcel","AcceptPeople","setAcceptPeople","checkedAfterquarantine","setCheckedAfterquarantine","Monthza","Yearza","BoxStsProps1","bgcolor","borderColor","color","m","border","fontFamily","textAlign","BoxStsProps2","BoxStsProps3","Clearfield","updateValue","info","params","Quarantine","YouRiskNow","NoCovid","MenuAddress","DropdownAddress","map","key","ID_ADDRESS","Address_Name","fullwidth","TimeRanger","DateTime","Month","Year","SelectAccept","dataSpecific","GetData","handleClickOpenConfirmAccept","handleClose","handleClickCloseConfirmAccept","Dialog","fullWidth","TransitionComponent","onClose","DialogTitle","survey","DialogContent","onSubmit","e","preventDefault","setTimeout","formData","post","catch","error","alert","PostToDatabase","TextField","required","autoFocus","type","label","variant","inputProps","minLength","maxLength","InputLabelProps","onChange","event","target","min","FormLabel","component","Radio","checked","multiline","rows","FormControl","InputLabel","htmlFor","Select","native","select","utils","DateFnsUtils","DatePicker","date","fullDate","Day","onDateChange","FormControlLabel","control","Checkbox","max","step","DialogActions","Button","size","onClick","form","Grid","xs","sm","md","lg","xl","Card","elevation","container","spacing","Badge","badgeContent","length","Collapse","in","List","ListItem","button","ListItemAvatar","Avatar","ListItemText","Box","display","justifyContent","borderRadius","RecordTime","Personal_ID","stateCheckedA","disabled","stateCheckedB","stateCheckedC","stateCheckedD","stateCheckedE","stateCheckedF","stateCheckedG","stateCheckedH","stateCheckedI","stateCheckedJ","stateCheckedK","Alert","severity","AlertTitle","Divider","DialogContentText","accept","Check","put","Accept","margin","NotFoundPage","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,4YCmB5B,SAASC,IAAO,MASSC,qBATT,mBASRC,GATQ,aAUOD,qBAVP,mBAUpBE,EAVoB,KAUTC,EAVS,OAWaH,qBAXb,mBAWpBI,EAXoB,KAWNC,EAXM,OAYOL,qBAZP,mBAYpBM,EAZoB,KAYTC,EAZS,OAaaP,qBAbb,mBAapBQ,EAboB,KAaNC,EAbM,OAcmBT,qBAdnB,mBAcpBU,EAdoB,KAcHC,EAdG,OAeCX,qBAfD,mBAepBY,EAfoB,KAeZC,EAfY,OAgBab,qBAhBb,mBAgBpBc,EAhBoB,KAgBNC,EAhBM,OAiBOf,qBAjBP,mBAiBpBgB,EAjBoB,KAiBTC,EAjBS,OAkBSjB,qBAlBT,mBAkBpBkB,EAlBoB,KAkBRC,EAlBQ,QAmBKnB,mBAAS,IAnBd,qBAmBVoB,IAnBU,gBAoBCpB,mBAAS,IApBV,qBAoBpBqB,GApBoB,MAoBZC,GApBY,SAqBOtB,mBAAS,IArBhB,qBAqBpBuB,GArBoB,MAqBTC,GArBS,SAsBDxB,qBAtBC,qBAwBrByB,IAxBqB,YAwBP,SAAAC,GAAK,OAAIA,EAAMC,QAAQ,KAI1BC,YAAM,CACnBC,QAAS,QACTC,WAAY,CAAC,EAAE,MA8GnB,IAAMC,GAAU,WA3EZC,IAAMC,IAAI,iDACTC,MAAK,SAAUC,GACZ,IACMC,EADWD,EAASE,KACCC,KAC3Bd,GAAaY,MArBVJ,IAAMC,IAAI,8CAChBC,MAAK,SAAUC,GACZ,IAAME,EAAOF,EAASE,KAEtBpC,EAAcoC,GACdlC,EAAakC,EAAKnC,WAClBG,EAAgBgC,EAAKjC,cACrBG,EAAa8B,EAAK/B,WAClBG,EAAgB4B,EAAK7B,cACrBG,EAAmB0B,EAAK3B,iBACxBG,EAAUwB,EAAKzB,QACfG,EAAgBsB,EAAKvB,cACrBG,EAAaoB,EAAKrB,WAClBG,EAAckB,EAAKnB,eA4BhBc,IAAMC,IAAI,kDAChBC,MAAK,SAAUC,GACZ,IAAME,EAAOF,EAASE,KACtBjB,GAAYiB,EAAKE,UACjBjB,GAAUe,EAAKhB,UAGjB,IAGkBmB,MAASC,OAAO,KACjBD,MAASE,SAAS,EAAG,QAAQC,YA8DpD,OAfAC,qBAAU,WACNb,OAWG,IAKH,kBAAC,WAAD,KAKI,wBAAIc,UAAU,6DAA6DC,GAAG,oBAI1E,uBAAGC,MAAM,iEAAiEC,KAAK,KAC3E,yBAAKD,MAAM,kCACP,uBAAGF,UAAU,iCAEjB,yBAAKE,MAAM,2BAAX,SAIJ,yBAAKF,UAAU,mBAAf,QAKA,wBAAIA,UAAU,YACV,uBAAGA,UAAU,qBAAqBG,KAAK,IAAIC,cAAY,WAAWC,cAAY,eAAeC,gBAAc,OAAOC,gBAAc,eAC5H,uBAAGP,UAAU,qBACb,yCAEJ,yBAAKC,GAAG,cAAcD,UAAU,WAAWQ,kBAAgB,aAAaC,cAAY,qBAChF,yBAAKT,UAAU,wCACX,wBAAIA,UAAU,mBAAd,UACA,kBAAC,IAAD,CAAMU,GAAI,IAAIV,UAAU,gBAAgBG,KAAK,KAA7C,QACA,kBAAC,IAAD,CAAMO,GAAI,WAAWV,UAAU,gBAAgBG,KAAK,YAApD,mBAMZ,wBAAIH,UAAU,qBAKlB,yBAAKC,GAAG,kBAAkBD,UAAU,sBAEhC,yBAAKC,GAAG,WAIJ,yBAAKD,UAAU,6EA6Cf,yBAAKA,UAAU,mBAEX,yBAAKA,UAAU,8DACX,wBAAIA,UAAU,yBAAd,uBAIA,uBAAGE,MAAM,OAAOD,GAAG,SAAnB,YAAqC5B,GAAe,6BAIxD,yBAAK2B,UAAU,OAGX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,6DAAf,YACA,yBAAKA,UAAU,0CACX,yBAAKE,MAAM,QACP,kBAAC,IAAD,CACArB,MAAOxB,EACPsD,SAAU,KACV/B,YAAaA,OAGf,6BACN,4CAAkB,IAAKrB,IAE3B,yBAAKqD,MAAO,CAAEC,MAAO,MAAOC,QAAS,OAAQC,IAAKC,UAQlE,yBAAKhB,UAAU,0BACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,6DAAf,aACI,yBAAKA,UAAU,0CACX,yBAAKE,MAAM,QACP,kBAAC,IAAD,CACArB,MAAOpB,EACPkD,SAAU,KACV/B,YAAaA,OAGf,6BACN,6CAAmB,IAAKX,IAEhC,yBAAK2C,MAAO,CAAEC,MAAO,MAAOC,QAAS,OAAQC,IAAKE,UAQlE,yBAAKjB,UAAU,0BACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,6DAAf,gBACI,yBAAKA,UAAU,0CACX,yBAAKE,MAAM,QACP,kBAAC,IAAD,CACArB,MAAOlB,EACPgD,SAAU,KACV/B,YAAaA,OAGf,6BACN,gDAAsB,IAAKf,IAGnC,yBAAK+C,MAAO,CAAEC,MAAO,MAAOC,QAAS,OAAQC,IAAKG,UASlE,yBAAKlB,UAAU,0BACX,yBAAKA,UAAU,6CACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,4DAAf,UACI,yBAAKA,UAAU,0CACX,yBAAKE,MAAM,QACP,kBAAC,IAAD,CACArB,MAAOd,EACP4C,SAAU,KACV/B,YAAaA,OAGf,6BACN,0CAAgB,IAAKT,IAG7B,yBAAKyC,MAAO,CAAEC,MAAO,MAAOC,QAAS,OAAQC,IAAKI,WAUtE,yBAAKnB,UAAU,OAEX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,oBAEX,yBAAKA,UAAU,+EACX,wBAAIA,UAAU,qCAAd,sCAGJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBAxRnD,WACI,IAAMoB,EAAgB1C,GAAU2C,OAAO,GACvC,OAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAeR,MAAO,IAAKS,OAAQ,IAAK9B,KAAM4B,GAC1C,kBAAC,IAAD,CAAOG,QAAQ,OAAOC,OAAO,YAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAASC,aAAc,CAAEZ,MAAO,IAAKa,gBAAiB,UACtD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeF,OAAO,OAAOG,gBAAgB,QAC7C,kBAAC,IAAD,CAAKC,KAAK,eAAeL,QAAQ,eAAeM,KAAK,UAAUC,QAAS,KACxE,kBAAC,IAAD,CAAKF,KAAK,gBAAgBL,QAAQ,eAAeM,KAAK,UAAUC,QAAS,OA8QhDC,OAOjB,yBAAK/B,UAAU,gCACX,yBAAKA,UAAU,oBAEX,yBAAKA,UAAU,+EACX,wBAAIA,UAAU,qCAAd,8BAGJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uBArR3C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAea,MAAO,IAAKS,OAAQ,IAAK9B,KAAMd,IAC1C,kBAAC,IAAD,CAAO6C,QAAQ,OAAOC,OAAO,YAC7B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAASC,aAAc,CAAEZ,MAAO,IAAKa,gBAAiB,UACtD,kBAAC,IAAD,CAAQM,cAAc,SAASV,OAAQ,KACvC,kBAAC,IAAD,CAAeE,OAAO,OAAOG,gBAAgB,QAC7C,kBAAC,IAAD,CAAMJ,QAAQ,YAAYM,KAAK,UAAUC,QAAS,GAAIN,OAAO,YAC7D,kBAAC,IAAD,CAAMD,QAAQ,YAAYM,KAAK,UAAUC,QAAS,GAAIN,OAAO,kBAqRrD,yBAAKxB,UAAU,yCACX,yBAAKA,UAAU,yBAEX,yBAAKA,UAAU,+EACX,wBAAIA,UAAU,qCAAd,uBAGJ,yBAAKA,UAAU,aACP,yBAAKA,UAAU,OAEX,yBAAKE,MAAM,0CACX,yBAAKU,MAAO,CAAEC,MAAO,OAAQE,IAAKkB,MAClC,6BAAK,6BACD,qCAAWzD,GAAO0D,OAGtB,yBAAKhC,MAAM,SAGX,yBAAKA,MAAM,sBACX,yBAAKU,MAAO,CAAEC,MAAO,OAAQE,IAAKoB,MAC9B,6BAAK,6BACL,uCAAa3D,GAAO4D,gBAcxD,4BAAQpC,UAAU,0BACd,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,iCACX,uE,+XCrZlBqC,GAAYC,aAAW,CACzBC,KAAM,CAAE1B,MAAO,OAGf2B,GAAaC,EAAQ,KAEnBC,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,QAAQF,IAAKA,GAASD,OAG5CI,GAAcN,IAAMC,YAAW,SAAoBC,EAAOC,GAChE,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAO3C,IA6yCWK,GA7yCI,WAAI,MAWS/F,oBAAS,GAXlB,mBAWRgG,EAXQ,KAWFC,EAXE,OAYmCjG,oBAAS,GAZ5C,mBAYRkG,EAZQ,KAYWC,EAZX,OAc2BnG,qBAd3B,mBAcRoG,EAdQ,KAcOC,EAdP,OAeuBrG,qBAfvB,mBAeRsG,EAfQ,KAeKC,EAfL,OAgBavG,qBAhBb,mBAgBAwG,GAhBA,aAiBWxG,qBAjBX,mBAiBDyG,GAjBC,aAkBuBzG,mBAAS,IAlBhC,mBAkBR0G,EAlBQ,KAkBKC,EAlBL,OAmBqB3G,mBAAS,IAnB9B,oBAmBR4G,GAnBQ,MAmBIC,GAnBJ,SAoByB7G,mBAAS,IApBlC,qBAoBR8G,GApBQ,MAoBMC,GApBN,SAuBW/G,oBAAS,GAvBpB,qBAuBRgH,GAvBQ,MAuBDC,GAvBC,MAwBTC,GAAc,SAACC,GACjBC,QAAQC,IAAI,qBAAqBF,EAAKG,IAEtCL,GAAS,eAAID,GAAL,eAAYG,EAAKG,IAAKN,GAAMG,EAAKG,QA3B9B,GA6BatH,oBAAS,GA7BtB,qBA6BRuH,GA7BQ,MA6BAC,GA7BA,MA8BTC,GAAgB,SAACN,GAGnBK,GAAU,eAAID,GAAL,eAAa,MAAOA,GAAM,OAjCxB,GAmCavH,oBAAS,GAnCtB,qBAmCR0H,GAnCQ,MAmCAC,GAnCA,MAoCTC,GAAgB,SAACT,GAGnBQ,GAAU,eAAID,GAAL,eAAa,MAAOA,GAAM,OAvCxB,GAyCa1H,oBAAS,GAzCtB,qBAyCR6H,GAzCQ,MAyCAC,GAzCA,MA0CTC,GAAgB,SAACZ,GAGnBW,GAAU,eAAID,GAAL,eAAa,MAAOA,GAAM,OA7CxB,GAuFe7H,mBAAS,IAvFxB,qBAuFRgI,GAvFQ,MAuFCC,GAvFD,SAwFSjI,mBAAS,IAxFlB,qBAwFRkI,GAxFQ,MAwFFC,GAxFE,SAyFiBnI,mBAAS,IAzF1B,qBAyFRoI,GAzFQ,MAyFEC,GAzFF,SA0FOrI,mBAAS,IA1FhB,qBA0FRsI,GA1FQ,MA0FHC,GA1FG,SA2F2BvI,mBAAS,sBA3FpC,qBA2FRwI,GA3FQ,MA2FOC,GA3FP,SA4F2BzI,mBAAS,IA5FpC,qBA4FR0I,GA5FQ,MA4FOC,GA5FP,SA6FO3I,mBAAS,IA7FhB,qBA6FR4I,GA7FQ,MA6FHC,GA7FG,SA8FiB7I,mBAAS,IA9F1B,qBA8FR8I,GA9FQ,MA8FEC,GA9FF,SAgGuB/I,mBAAS,GAhGhC,qBAgGRgJ,GAhGQ,MAgGKC,GAhGL,SAiGuBjJ,mBAAS,GAjGhC,qBAiGRkJ,GAjGQ,MAiGKC,GAjGL,SAkGuBnJ,mBAAS,GAlGhC,qBAkGRoJ,GAlGQ,MAkGKC,GAlGL,SAmGuBrJ,mBAAS,GAnGhC,qBAmGRsJ,GAnGQ,MAmGKC,GAnGL,SAoGuBvJ,mBAAS,GApGhC,qBAoGRwJ,GApGQ,MAoGKC,GApGL,SAqGuBzJ,mBAAS,GArGhC,qBAqGR0J,GArGQ,MAqGKC,GArGL,SAsGuB3J,mBAAS,GAtGhC,qBAsGR4J,GAtGQ,MAsGKC,GAtGL,SAuGuB7J,mBAAS,GAvGhC,qBAuGR8J,GAvGQ,MAuGKC,GAvGL,SAwGuB/J,mBAAS,GAxGhC,qBAwGRgK,GAxGQ,MAwGKC,GAxGL,SAyGuBjK,mBAAS,GAzGhC,qBAyGRkK,GAzGQ,MAyGKC,GAzGL,SA0GuBnK,mBAAS,GA1GhC,qBA0GRoK,GA1GQ,MA0GKC,GA1GL,SA4GuBrK,mBAAS,IA5GhC,qBA4GRsK,GA5GQ,MA4GKC,GA5GL,SA6GuBvK,mBAAS,4HA7GhC,qBA6GRwK,GA7GQ,MA6GKC,GA7GL,SA8GiBzK,mBAAS,IA9G1B,qBA8GR0K,GA9GQ,MA8GEC,GA9GF,SA+G6C3K,mBAAS,IA/GtD,qBA+GR4K,GA/GQ,MA+GgBC,GA/GhB,SAiHqC7K,oBAAS,IAAI8K,MAAOC,sBAjHzD,qBAiHRC,GAjHQ,MAiHYC,GAjHZ,SA+HmBjL,qBA/HnB,qBA+HZkL,GA/HY,MA+HCC,GA/HD,SAgIwBnL,qBAhIxB,qBAgIRoL,GAhIQ,MAgIMC,GAhIN,SAiI6CrL,mBAAS,4EAjItD,qBAiIRsL,GAjIQ,MAiIgBC,GAjIhB,SAmIevL,mBAAS,OAnIxB,qBAmIRwL,GAnIQ,gBAoIaxL,mBAAS,QApItB,qBAoIRyL,GApIQ,MAuIPC,IAvIO,MAuIQ,CACnBC,QAAS,mBACTC,YAAa,YACbC,MAAO,YACPC,EAAG,EACHC,OAAQ,EACRC,WAAW,OACXvI,MAAO,CAAEC,MAAO,QAASS,OAAQ,OAAO8H,UAAW,YAE/CC,GAAe,CACnBP,QAAS,mBACTC,YAAa,UACbC,MAAO,UACPC,EAAG,EACHC,OAAQ,EACRC,WAAW,OACXvI,MAAO,CAAEC,MAAO,OAAQS,OAAQ,OAAO8H,UAAW,WAE9CE,GAAe,CACnBR,QAAS,mBACTC,YAAa,QACbC,MAAO,QACPC,EAAG,EACHC,OAAQ,EACRC,WAAW,OACXvI,MAAO,CAAEC,MAAO,OAAQS,OAAQ,OAAO8H,UAAW,WAKpC/G,KA0ElB,SAASkH,KACLnE,GAAW,IACXE,GAAQ,IACRE,GAAY,IACZE,GAAO,IACPE,GAAiB,sBACjBE,GAAiB,IACjBE,GAAO,IACPE,GAAY,IACZE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,GACfE,GAAe,IACfE,GAAe,4HACfE,GAAY,IACZE,GAA0B,IAC1BI,IAAsB,IAAIH,MAAOC,sBAyDrC,SAASsB,MAtDT,WACI,IAAIC,EAAM,CACNC,OAAQ,CACJf,QAAQA,GACRC,OAAOA,KAGRzJ,IAAMC,IAAI,mCAAmCqK,GACnDpK,MAAK,SAAUC,GACZ,IAAME,EAAOF,EAASE,KAEtBsE,EAAetE,MA4CnBmK,GAxCJ,WACI,IAAIF,EAAM,CACNC,OAAQ,CACJf,QAAQA,GACRC,OAAOA,KAGRzJ,IAAMC,IAAI,mCAAmCqK,GACnDpK,MAAK,SAAUC,GACZ,IAAME,EAAOF,EAASE,KAEtBwE,GAAcxE,MA8BlBoK,GA3BJ,WACI,IAAIH,EAAM,CACNC,OAAQ,CACJf,QAAQA,GACRC,OAAOA,KAGRzJ,IAAMC,IAAI,gCAAgCqK,GAChDpK,MAAK,SAAUC,GACZ,IAAME,EAAOF,EAASE,KAEtB0E,GAAgB1E,MAiBpBqK,GAGJ,IASMC,GAAa,WACf3K,IAAMC,IAAI,iCACTC,MAAK,SAASC,GACX,IACMyK,EADczK,EAASE,KACOwK,KAAI,SAAC1F,GAAD,OAChC,4BACA2F,IAAM3F,EAAK4F,WACXrL,MAAQyF,EAAK6F,aAEbC,WAAS,GACH9F,EAAK6F,iBAEf3G,EAAiBuG,OAG7B,SAASM,KACL,IAAIC,EAAW3K,MAASC,OAAO,KAAM,IAAID,MAASC,OAAO,MAErD2K,GADM5K,MAASC,OAAO,MACdD,MAASC,OAAO,SACxB4K,EAAO7K,MAASC,OAAO,QAC3B8D,EAAe4G,GACf3G,EAAU4G,GACV3G,EAAS4G,GAwBb,SAASC,GAAanG,IArNtB,SAAkBA,GACd,IAAImF,EAAM,CACFC,OAAQ,CACJzJ,GAAGqE,EAAKG,KAEpB6D,GAAehE,EAAKG,IAGpBtF,IAAMC,IAAI,6CAA6CqK,GAClDpK,MAAK,SAAUC,GACZ,IAAMoL,EAAepL,EAASE,KAC9B+E,QAAQC,IAAIkG,GACZA,EAAaV,KAAI,SAAC1F,GAAD,OACjBkE,GAAgBlE,EAAKe,YAyM7BsF,CAASrG,GACTsG,KAMJ,IAGMC,GAAc,WAChBzH,GAAQ,GAERmG,KACAC,MAMEoB,GAA+B,WAC7BtH,GAAqB,IAEvBwH,GAAgC,WAClCxH,GAAqB,IA4C7B,OA7BIvD,qBAAU,WA9FN+J,KACAN,KACAa,KACJnF,KACAH,KACAH,OAoHG,IAIJ,kBAAC,WAAD,KAIK,kBAACmG,EAAA,EAAD,CACIC,WAAS,EACT7H,KAAMA,EACNlD,GAAG,SACHgL,oBAAqBvI,GACrB1C,UAAU,MACVkL,QAASL,GACTrK,kBAAgB,oBAChBN,MAAM,6CAEF,kBAACiL,EAAA,EAAD,CACAlL,GAAG,oBACHD,UAAU,oBACN,wBAAIC,GAAG,WAAP,qMACA,yBAAKW,MAAO,CAAEC,MAAO,OAAQE,IAAKqK,QACxB,6BACd,kBAACC,GAAA,EAAD,KAEA,0BACApL,GAAG,OACH2B,KAAK,OACL0J,SApSZ,SAAkBC,GACdA,EAAEC,iBACFC,YAAW,WACPrI,GAAQ,GAKhB,SAAyBmI,GACrB,IAAIG,EAAW,CACXvG,QAAQA,GACRE,KAAKA,GACLE,SAASA,GACTE,IAAIA,GACJE,cAAcA,GACdE,cAAcA,GACdE,IAAIA,GACJE,SAASA,GACTkC,mBAAmBA,GACnBhC,YAAYA,GACZE,YAAYA,GACZE,YAAYA,GACZkB,YAAYA,GACZhB,YAAYA,GACZE,YAAYA,GACZE,YAAYA,GACZE,YAAYA,GACZE,YAAYA,GACZE,YAAYA,GACZE,YAAYA,GACZE,YAAYA,GACZI,YAAYA,GACZE,SAASA,GACTpE,YAAYA,GAGhBtE,IAAMwM,KAAK,uCAAwCD,GAC9CrM,MAAK,SAAUC,GACZiF,QAAQC,IAAIlF,MAEfsM,OAAM,SAAUC,GACbtH,QAAQC,IAAIqH,MAGlBxB,KAEAoB,YAAW,WACTjC,KACAsC,MAAM,sHACNvC,OAEG,KA/CHwC,KACG,OAgSK,kBAACC,EAAA,EAAD,CACAC,UAAQ,EACRC,WAAS,EACTlB,WAAS,EACTmB,KAAK,OACLC,MAAM,uFAENC,QAAQ,WACJC,WAAY,CAACC,UAAW,GAAKC,UAAW,GAAI5L,MAAO,CAACuI,WAAW,SAC/DsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQsG,GACRuH,SAAW,SAAAC,GAAK,OAAKvH,GAAWuH,EAAMC,OAAO/N,UAErD,6BAAK,6BAEL,kBAACmN,EAAA,EAAD,CACAC,UAAQ,EAERE,KAAK,OACLC,MAAM,2BAENC,QAAQ,WACJC,WAAY,CAAC1L,MAAO,CAACuI,WAAW,SAChCsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQwG,GACRqH,SAAW,SAAAC,GAAK,OAAKrH,GAAQqH,EAAMC,OAAO/N,UAElD,qCAEA,kBAACmN,EAAA,EAAD,CACAC,UAAQ,EAERE,KAAK,OACLC,MAAM,6CAENC,QAAQ,WACJC,WAAY,CAAC1L,MAAO,CAACuI,WAAW,SAChCsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQ0G,GACRmH,SAAW,SAAAC,GAAK,OAAKnH,GAAYmH,EAAMC,OAAO/N,UAEtD,6BAAK,6BAEL,kBAACmN,EAAA,EAAD,CACAC,UAAQ,EAERE,KAAK,SACLC,MAAM,2BAENC,QAAQ,WACJC,WAAY,CAACO,IAAK,EAAGL,UAAW,EAAG5L,MAAO,CAACuI,WAAW,SACtDsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQ4G,GACRiH,SAAW,SAAAC,GAAK,OAAKjH,GAAOiH,EAAMC,OAAO/N,UAEjD,6BAAK,6BAEL,kBAACiO,GAAA,EAAD,CAAWC,UAAU,SAAS9M,GAAG,WAAjC,sBACA,kBAAC+M,EAAA,EAAD,CACIC,QAA2B,uBAAlBtH,GACT+G,SAAW,SAAAC,GAAK,OAAK/G,GAAiB+G,EAAMC,OAAO/N,QACnDA,MAAM,qBACNmK,MAAM,UACNpH,KAAK,oBACL0K,WAAY,CAAE,aAAc,OAC9B,0BAAMrM,GAAG,WAAT,sBACF,kBAAC+M,EAAA,EAAD,CACIC,QAA2B,6BAAlBtH,GACT+G,SAAW,SAAAC,GAAK,OAAK/G,GAAiB+G,EAAMC,OAAO/N,QACnDA,MAAM,2BACNmK,MAAM,YACNpH,KAAK,oBACL0K,WAAY,CAAE,aAAc,OAC9B,0BAAMrM,GAAG,WAAT,4BACF,6BAAK,6BAEL,kBAAC+L,EAAA,EAAD,CACIC,UAAQ,EACRjB,WAAS,EACT/K,GAAG,oBACHmM,MAAM,6CACNc,WAAS,EACTC,KAAM,EACNd,QAAQ,WACRC,WAAY,CAAC1L,MAAO,CAACuI,WAAW,SAChCsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQgH,GACR6G,SAAW,SAAAC,GAAK,OAAK7G,GAAiB6G,EAAMC,OAAO/N,UAE3D,6BAAK,6BAEL,kBAACmN,EAAA,EAAD,CACAC,UAAQ,EAERE,KAAK,OACLC,MAAM,iCAENC,QAAQ,WACJC,WAAY,CAAC1L,MAAO,CAACuI,WAAW,SAChCsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQkH,GACR2G,SAAW,SAAAC,GAAK,OAAK3G,GAAO2G,EAAMC,OAAO/N,UAEjD,6BAAK,6BAEL,kBAACuO,GAAA,EAAD,CAAanB,UAAQ,EAAChM,GAAG,eACzB,kBAACoN,EAAA,EAAD,CAAYC,QAAQ,oBAAoBrN,GAAG,WAA3C,4EACI,kBAACsN,EAAA,EAAD,CACAC,QAAM,EACNvB,UAAQ,EAERhM,GAAG,kBACHD,UAAU,aACVyN,QAAM,EACNrB,MAAM,2EACFE,WAAY,CAAC1L,MAAO,CAACuI,WAAW,SAChCsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQoH,GACRyG,SAAW,SAAAC,GAAK,OAAKzG,GAAYyG,EAAMC,OAAO/N,SAEhD0E,IAGV,6BAAK,6BAEL,kBAAC,KAAD,CAAyBmK,MAAOC,MAC5B,kBAACC,EAAA,EAAD,CACA3B,UAAQ,EAERhM,GAAG,cACHoM,QAAQ,SACRD,MAAM,gLACNpM,UAAU,YACVnB,MAAOsJ,GACPvI,OAAO,aACP8M,SAAU,SAAAmB,GAAI,OAnfb,SAACA,GAClB,IAAMC,EAAWD,EACXE,EAAMvL,GAAWsL,EAAU,MAC3BvD,EAAQ/H,GAAWsL,EAAU,MAC7BtD,EAAOhI,GAAWsL,EAAU,QAKlC1F,GAJkBmC,EAAO,IAAKwD,EAAK,IAAKvD,GA8eNwD,CAAaH,OAGnC,6BAAK,6BAEL,wBAAI5N,GAAG,UAAUD,UAAU,QAA3B,qNACA,kBAACiO,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAS9G,GACTuG,SAAW,SAAAC,GAAK,OAAKvG,GAAeuG,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,+FACT,6BAEA,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAS5G,GACTqG,SAAW,SAAAC,GAAK,OAAKrG,GAAeqG,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,uHACT,6BAEA,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAS1G,GACTmG,SAAW,SAAAC,GAAK,OAAKnG,GAAemG,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,yFACT,6BAAK,6BAEL,kBAACJ,EAAA,EAAD,CACAC,UAAQ,EAERE,KAAK,SACLC,MAAM,mDACNpM,UAAU,YAEVqM,QAAQ,WACJC,WAAY,CAACO,IAAK,GAAIuB,IAAK,GAAI5B,UAAW,EAAG6B,KAAK,MAAOzN,MAAO,CAACuI,WAAW,SAC5EsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQ4I,GACRiF,SAAY,SAAAC,GAAK,OAAKjF,GAAeiF,EAAMC,OAAO/N,UAE1D,6BAAK,6BAEL,wBAAIoB,GAAG,UAAUD,UAAU,QAA3B,kCACA,kBAACiO,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAASxG,GACTiG,SAAW,SAAAC,GAAK,OAAKjG,GAAeiG,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,qDAAY,6BAErB,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAStG,GACT+F,SAAW,SAAAC,GAAK,OAAK/F,GAAe+F,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,iBAAM,6BAEf,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAASpG,GACT6F,SAAW,SAAAC,GAAK,OAAK7F,GAAe6F,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,+CAAW,6BAEpB,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAASlG,GACT2F,SAAW,SAAAC,GAAK,OAAK3F,GAAe2F,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,yCAAU,6BAEnB,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAShG,GACTyF,SAAW,SAAAC,GAAK,OAAKzF,GAAeyF,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,mFAAiB,6BAE1B,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAS9F,GACTuF,SAAW,SAAAC,GAAK,OAAKvF,GAAeuF,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,iEAAc,6BAEvB,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAS5F,GACTqF,SAAW,SAAAC,GAAK,OAAKrF,GAAeqF,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,qDAAY,6BAErB,kBAAC6B,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CACIlB,QAAS1F,GACTmF,SAAW,SAAAC,GAAK,OAAKnF,GAAemF,EAAMC,OAAOK,UACjDjN,UAAU,OACV4B,KAAK,cACLoH,MAAM,YACXoD,MAAM,kKACT,6BAAK,6BAEL,wBAAInM,GAAG,UAAUD,UAAU,QAA3B,wCACA,kBAACgN,EAAA,EAAD,CACIC,QAAyB,6HAAhBtF,GACT+E,SAAW,SAAAC,GAAK,OAAK/E,GAAe+E,EAAMC,OAAO/N,QACjDmB,UAAU,OACVnB,MAAM,2HACNmK,MAAM,UACNpH,KAAK,oBACL0K,WAAY,CAAE,aAAc,OAC9B,0BAAMrM,GAAG,WAAT,4HACF,kBAAC+M,EAAA,EAAD,CACIC,QAAyB,6EAAhBtF,GACT+E,SAAW,SAAAC,GAAK,OAAK/E,GAAe+E,EAAMC,OAAO/N,QACjDmB,UAAU,OACVnB,MAAM,2EACNmK,MAAM,YACNpH,KAAK,oBACL0K,WAAY,CAAE,aAAc,OAC9B,0BAAMrM,GAAG,WAAT,4EACF,6BAAK,6BAEL,kBAAC+L,EAAA,EAAD,CACAC,UAAQ,EACRjB,WAAS,EACTmB,KAAK,OACLC,MAAM,yDAENC,QAAQ,WACJC,WAAY,CAAC1L,MAAO,CAACuI,WAAW,SAChCsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACjCtK,MAAQgJ,GACR6E,SAAY,SAAAC,GAAK,OAAK7E,GAAY6E,EAAMC,OAAO/N,UAEvD,6BAAK,+BAIT,kBAACyP,GAAA,EAAD,KACA,6BAAK,6BAAK,6BAAK,6BACf,kBAACC,EAAA,EAAD,CACAtO,GAAG,UACHuO,KAAK,QACLxF,MAAM,YACNqD,QAAQ,YACRoC,QAAU5D,IALV,wCAUA,kBAAC0D,EAAA,EAAD,CACAG,KAAK,OACLzO,GAAG,UACHuO,KAAK,QACLrC,KAAK,SACLnD,MAAM,UACNqD,QAAQ,aANR,oCAeJ,wBAAIrM,UAAU,6DAA6DC,GAAG,oBAI1E,uBAAGC,MAAM,iEAAiEC,KAAK,KAC3E,yBAAKD,MAAM,kCACP,uBAAGF,UAAU,iCAEjB,yBAAKE,MAAM,2BAAX,SAIJ,yBAAKF,UAAU,mBAAf,QAIA,wBAAIA,UAAU,YACV,uBAAGA,UAAU,qBAAqBG,KAAK,IAAIC,cAAY,WAAWC,cAAY,eAAeC,gBAAc,OAAOC,gBAAc,eAC5H,uBAAGP,UAAU,qBACb,yCAEJ,yBAAKC,GAAG,cAAcD,UAAU,WAAWQ,kBAAgB,aAAaC,cAAY,qBAChF,yBAAKT,UAAU,wCACX,wBAAIA,UAAU,mBAAd,UACA,kBAAC,IAAD,CAAMU,GAAI,IAAIV,UAAU,gBAAgBG,KAAK,KAA7C,QACJ,kBAAC,IAAD,CAAMO,GAAI,WAAWV,UAAU,gBAAgBG,KAAK,YAApD,mBAKR,wBAAIH,UAAU,qBAKlB,yBAAKC,GAAG,kBAAkBD,UAAU,sBAEhC,yBAAKC,GAAG,WAIJ,yBAAKD,UAAU,6EA8Cf,yBAAKA,UAAU,mBAEX,yBAAKA,UAAU,6DACX,wBAAIA,UAAU,yBAAd,aAKJ,yBAAKA,UAAU,OAIX,yBAAKA,UAAU,kCACX,kBAAC2O,EAAA,EAAD,CAAMrK,MAAI,EAACsK,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1C,kBAACC,EAAA,EAAD,CACAC,UAAW,EACX7C,QAAQ,YACRrM,UAAU,wCACVyO,QAjhBR,WACpBrL,GAAQ,IAihBoBnD,GAAG,cACC,wBAAID,UAAU,eACd,yBAAKE,MAAM,0CACP,yBAAKU,MAAO,CAAEC,MAAO,QAASE,IAAKqK,OACnC,6BAAK,8BAET,yBAAKlL,MAAM,iBACX,wBAAIF,UAAU,aAAaC,GAAG,YAA9B,kFAEA,+BAKD,6BAAK,6BAEZ,kBAAC0O,EAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,GACrB,kBAACT,EAAA,EAAD,CAAMrK,MAAI,EAACsK,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtC,kBAACC,EAAA,EAAD,CAAMC,UAAW,EAAG7C,QAAQ,YAAYrM,UAAU,OAAOC,GAAG,iBACxD,kBAACgP,EAAA,EAAD,CAAMC,UAAW,EAAG7C,QAAQ,YAAapM,GAAG,eAAewO,QAAS,WAAK7J,OACrE,wBACA5E,UAAU,kBACVC,GAAG,WAFH,4HAEmC,IACnC,kBAACoP,EAAA,EAAD,CACAC,aAAczL,EAAY0L,OAC1BvG,MAAM,gBAIN,kBAACwG,EAAA,EAAD,CAAUvF,IAAK,KAAMwF,GAAI/K,GAAM,IAC/B,kBAACgL,EAAA,EAAD,KACK7L,EAAYmG,KAAI,SAAA1F,GAGb,OACA,yBAAKpE,MAAM,uBACP,kBAACyP,EAAA,EAAD,CAAUC,QAAM,EAAC3F,IAAK3F,EAAKiG,MAAOkE,QAAS,WAAKpK,GAAcC,KAC9D,kBAACuL,GAAA,EAAD,KACA,kBAACC,EAAA,EAAD,OAGI,kBAACC,GAAA,EAAD,CAAe9F,IAAM3F,EAAKG,IAEH,4HAAlBH,EAAKqD,YACN,kBAACqI,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,YAC/B,kBAACF,EAAA,EAAD,eAAKG,aAAc,IAAQtH,IAA3B,6HACG,KAEP,4BAAQ5I,GAAG,WAAW,uDAA0B,0BAAMA,GAAG,YAAaqE,EAAKe,KAAO,IAAMf,EAAKiB,UAAiB,6BAC9G,4BAAQtF,GAAG,WAAW,8EAA6B,0BAAMA,GAAG,YAAaqE,EAAK2B,UAAiB,6BAC/F,4BAAQhG,GAAG,WAAW,kHAAmC,0BAAMA,GAAG,YAAaqE,EAAK6D,oBAA2B,6BAC/G,4BAAQlI,GAAG,WAAW,sDAAyB,0BAAMA,GAAG,YAAaqE,EAAKmD,YAAc,IAAK,SAAY,6BACzG,4BAAQxH,GAAG,WAAW,kEAA2B,0BAAMA,GAAG,YAAYqE,EAAK8L,YAAkB,6BAC7F,4BAAQnQ,GAAG,WAAW,gDAAwB,0BAAMA,GAAG,YAAYqE,EAAKuD,UAAgB,+BAIhG,kBAAC2H,EAAA,EAAD,CAAUvF,IAAK3F,EAAKG,GAAIgL,GAAItL,GAAMG,EAAKG,KACvC,yBAAKvE,MAAM,iBACP,kBAACyP,EAAA,EAAD,CAAU1F,IAAK3F,EAAKG,IACxB,kBAACoL,GAAA,EAAD,MAEI,kBAACE,GAAA,EAAD,CAAc9F,IAAM3F,EAAKG,IACrB,wBAAIzE,UAAU,GAAGC,GAAG,WAApB,gEAA6C,6BAC7C,4BAAQA,GAAG,WAAW,0FAA+B,0BAAMA,GAAG,YAAYqE,EAAK+L,aAAmB,6BAClG,4BAAQpQ,GAAG,WAAW,uDAA0B,0BAAMA,GAAG,YAAaqE,EAAKe,KAAO,IAAMf,EAAKiB,UAAiB,6BAC9G,4BAAQtF,GAAG,WAAW,8BAAqB,0BAAMA,GAAG,YAAYqE,EAAKmB,KAAW,6BAChF,4BAAQxF,GAAG,WAAW,wBAAoB,0BAAMA,GAAG,YAAYqE,EAAKqB,eAAqB,6BACzF,4BAAQ1F,GAAG,WAAW,gDAAwB,0BAAMA,GAAG,YAAYqE,EAAKuB,eAAqB,6BAC7F,4BAAQ5F,GAAG,WAAW,oCAAsB,0BAAMA,GAAG,YAAYqE,EAAKyB,KAAW,6BACjF,4BAAQ9F,GAAG,WAAW,8EAA6B,0BAAMA,GAAG,YAAYqE,EAAK2B,UAAgB,6BAC7F,4BAAQhG,GAAG,WAAW,kHAAmC,0BAAMA,GAAG,YAAYqE,EAAK6D,oBAA0B,6BAC7G,wBAAIlI,GAAG,UAAUD,UAAU,QAA3B,qNACI,kBAACiO,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKgM,cAAeC,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,+FAAmB,6BACzI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKkM,cAAeD,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,uHAAuB,6BAC7I,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKmM,cAAeF,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,yFAAkB,6BAC5I,4BAAQnM,GAAG,WAAW,sDAAyB,0BAAMA,GAAG,YAAYqE,EAAKmD,aAAmB,6BACxF,kBAACwG,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKoM,cAAeH,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,qDAAY,6BAClI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKqM,cAAeJ,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,iBAAM,6BAC5H,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKsM,cAAeL,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,+CAAW,6BACjI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKuM,cAAeN,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,yCAAU,6BAChI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKwM,cAAeP,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,mFAAiB,6BACvI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKyM,cAAeR,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,iEAAc,6BACpI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAK0M,cAAeT,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,qDAAY,6BAClI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAK2M,cAAeV,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,kKAA+B,6BACzJ,4BAAQnM,GAAG,WAAW,0CAAuB,0BAAMA,GAAG,YAAYqE,EAAKqD,aAAmB,6BAC1F,4BAAQ1H,GAAG,WAAW,4DAA0B,0BAAMA,GAAG,YAAYqE,EAAKuD,UAAgB,6BAC1F,4BAAQ5H,GAAG,WAAW,kEAA2B,0BAAMA,GAAG,YAAYqE,EAAK8L,YAAkB,6BAE7F,yBAAKpQ,UAAU,OACf,yBAAKE,MAAM,cACX,yBAAKA,MAAM,cACP,yBAAKF,UAAU,gBACX,yBAAKA,UAAU,OACX,6BACuB,4HAAlBsE,EAAKqD,YACN,kBAACuJ,EAAA,EAAD,CACIjH,IAAM3F,EAAKG,GACXxE,GAAG,cACHkR,SAAS,OACT1C,QAAU,WAAMhE,GAAanG,KAC7B,kBAAC8M,EAAA,EAAD,CAAYnR,GAAG,WAAf,+CACM,YAS1C,kBAACoR,EAAA,EAAD,cASpB,kBAAC1C,EAAA,EAAD,CAAMrK,MAAI,EAACsK,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtC,kBAACC,EAAA,EAAD,CAAMC,UAAW,EAAG7C,QAAQ,YAAYrM,UAAU,OAAOC,GAAG,iBACxD,kBAACgP,EAAA,EAAD,CAAMC,UAAW,EAAG7C,QAAQ,YAAapM,GAAG,eAAewO,QAAS,WAAK1J,OACrE,wBACA/E,UAAU,kBACVC,GAAG,WAFH,4EAE2B,IAC3B,kBAACoP,EAAA,EAAD,CACAC,aAAcvL,GAAWwL,OACzBvG,MAAM,gBAIN,kBAACwG,EAAA,EAAD,CAAUvF,IAAK,KAAMwF,GAAI5K,GAAM,IAC/B,kBAAC6K,EAAA,EAAD,KACK3L,GAAWiG,KAAI,SAAA1F,GAGZ,OACA,yBAAKpE,MAAM,uBACP,kBAACyP,EAAA,EAAD,CAAUC,QAAM,EAAC3F,IAAK3F,EAAKiG,MAAOkE,QAAS,WAAKpK,GAAcC,KAC9D,kBAACuL,GAAA,EAAD,KACA,kBAACC,EAAA,EAAD,OAGI,kBAACC,GAAA,EAAD,CAAe9F,IAAM3F,EAAKG,IAEH,4EAAlBH,EAAKqD,YACN,kBAACqI,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,YAC/B,kBAACF,EAAA,EAAD,eAAKG,aAAc,IAAQ9G,IAA3B,6EACG,KAEP,4BAAQpJ,GAAG,WAAW,uDAA0B,0BAAMA,GAAG,YAAaqE,EAAKe,KAAO,IAAMf,EAAKiB,UAAiB,6BAC9G,4BAAQtF,GAAG,WAAW,8EAA6B,0BAAMA,GAAG,YAAaqE,EAAK2B,UAAiB,6BAC/F,4BAAQhG,GAAG,WAAW,kHAAmC,0BAAMA,GAAG,YAAaqE,EAAK6D,oBAA2B,6BAC/G,4BAAQlI,GAAG,WAAW,sDAAyB,0BAAMA,GAAG,YAAaqE,EAAKmD,YAAc,IAAK,SAAY,6BACzG,4BAAQxH,GAAG,WAAW,kEAA2B,0BAAMA,GAAG,YAAYqE,EAAK8L,YAAkB,6BAC7F,4BAAQnQ,GAAG,WAAW,gDAAwB,0BAAMA,GAAG,YAAYqE,EAAKuD,UAAgB,+BAIhG,kBAAC2H,EAAA,EAAD,CAAUvF,IAAK3F,EAAKG,GAAIgL,GAAItL,GAAMG,EAAKG,KACvC,yBAAKvE,MAAM,iBACP,kBAACyP,EAAA,EAAD,CAAU1F,IAAK3F,EAAKG,IACxB,kBAACoL,GAAA,EAAD,MAEI,kBAACE,GAAA,EAAD,CAAc9F,IAAM3F,EAAKG,IACrB,wBAAIzE,UAAU,GAAGC,GAAG,WAApB,gEAA6C,6BAC7C,4BAAQA,GAAG,WAAW,0FAA+B,0BAAMA,GAAG,YAAYqE,EAAK+L,aAAmB,6BAClG,4BAAQpQ,GAAG,WAAW,uDAA0B,0BAAMA,GAAG,YAAaqE,EAAKe,KAAO,IAAMf,EAAKiB,UAAiB,6BAC9G,4BAAQtF,GAAG,WAAW,8BAAqB,0BAAMA,GAAG,YAAYqE,EAAKmB,KAAW,6BAChF,4BAAQxF,GAAG,WAAW,wBAAoB,0BAAMA,GAAG,YAAYqE,EAAKqB,eAAqB,6BACzF,4BAAQ1F,GAAG,WAAW,gDAAwB,0BAAMA,GAAG,YAAYqE,EAAKuB,eAAqB,6BAC7F,4BAAQ5F,GAAG,WAAW,oCAAsB,0BAAMA,GAAG,YAAYqE,EAAKyB,KAAW,6BACjF,4BAAQ9F,GAAG,WAAW,8EAA6B,0BAAMA,GAAG,YAAYqE,EAAK2B,UAAgB,6BAC7F,4BAAQhG,GAAG,WAAW,kHAAmC,0BAAMA,GAAG,YAAYqE,EAAK6D,oBAA0B,6BAC7G,wBAAIlI,GAAG,UAAUD,UAAU,QAA3B,qNACI,kBAACiO,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKgM,cAAeC,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,+FAAmB,6BACzI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKkM,cAAeD,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,uHAAuB,6BAC7I,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKmM,cAAeF,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,yFAAkB,6BAC5I,4BAAQnM,GAAG,WAAW,sDAAyB,0BAAMA,GAAG,YAAYqE,EAAKmD,aAAmB,6BACxF,kBAACwG,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKoM,cAAeH,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,qDAAY,6BAClI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKqM,cAAeJ,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,iBAAM,6BAC5H,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKsM,cAAeL,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,+CAAW,6BACjI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKuM,cAAeN,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,yCAAU,6BAChI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKwM,cAAeP,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,mFAAiB,6BACvI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKyM,cAAeR,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,iEAAc,6BACpI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAK0M,cAAeT,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,qDAAY,6BAClI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAK2M,cAAeV,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,kKAA+B,6BACzJ,4BAAQnM,GAAG,WAAW,0CAAuB,0BAAMA,GAAG,YAAYqE,EAAKqD,aAAmB,6BAC1F,4BAAQ1H,GAAG,WAAW,4DAA0B,0BAAMA,GAAG,YAAYqE,EAAKuD,UAAgB,6BAC1F,4BAAQ5H,GAAG,WAAW,kEAA2B,0BAAMA,GAAG,YAAYqE,EAAK8L,YAAkB,6BAC7F,4BAAQnQ,GAAG,WAAW,kEAA2B,0BAAMA,GAAG,YAAYqE,EAAKyD,wBAA8B,gCAKzH,kBAACsJ,EAAA,EAAD,cASpB,kBAAC1C,EAAA,EAAD,CAAMrK,MAAI,EAACsK,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtC,kBAACC,EAAA,EAAD,CAAMC,UAAW,EAAG7C,QAAQ,YAAYrM,UAAU,OAAOC,GAAG,iBACxD,kBAACgP,EAAA,EAAD,CAAMC,UAAW,EAAG7C,QAAQ,YAAapM,GAAG,eAAewO,QAAS,WAAKvJ,OACrE,wBACAlF,UAAU,kBACVC,GAAG,WAFH,gEAEyB,IACzB,kBAACoP,EAAA,EAAD,CACAC,aAAcrL,GAAasL,OAC3BvG,MAAM,gBAIN,kBAACwG,EAAA,EAAD,CAAUvF,IAAK,KAAMwF,GAAIzK,GAAM,IAC/B,kBAAC0K,EAAA,EAAD,KACKzL,GAAa+F,KAAI,SAAA1F,GAGd,OACA,yBAAKpE,MAAM,uBACP,kBAACyP,EAAA,EAAD,CAAUC,QAAM,EAAC3F,IAAK3F,EAAKiG,MAAOkE,QAAS,WAAKpK,GAAcC,KAC9D,kBAACuL,GAAA,EAAD,KACA,kBAACC,EAAA,EAAD,OAGI,kBAACC,GAAA,EAAD,CAAe9F,IAAM3F,EAAKG,IAEH,gEAAlBH,EAAKqD,YACN,kBAACqI,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,YAC/B,kBAACF,EAAA,EAAD,eAAKG,aAAc,IAAQ7G,IAA3B,iEACG,KAEP,4BAAQrJ,GAAG,WAAW,uDAA0B,0BAAMA,GAAG,YAAaqE,EAAKe,KAAO,IAAMf,EAAKiB,UAAiB,6BAC9G,4BAAQtF,GAAG,WAAW,8EAA6B,0BAAMA,GAAG,YAAaqE,EAAK2B,UAAiB,6BAC/F,4BAAQhG,GAAG,WAAW,kHAAmC,0BAAMA,GAAG,YAAaqE,EAAK6D,oBAA2B,6BAC/G,4BAAQlI,GAAG,WAAW,sDAAyB,0BAAMA,GAAG,YAAaqE,EAAKmD,YAAc,IAAK,SAAY,6BACzG,4BAAQxH,GAAG,WAAW,kEAA2B,0BAAMA,GAAG,YAAYqE,EAAK8L,YAAkB,6BAC7F,4BAAQnQ,GAAG,WAAW,gDAAwB,0BAAMA,GAAG,YAAYqE,EAAKuD,UAAgB,+BAIhG,kBAAC2H,EAAA,EAAD,CAAUvF,IAAK3F,EAAKG,GAAIgL,GAAItL,GAAMG,EAAKG,KACvC,yBAAKvE,MAAM,iBACP,kBAACyP,EAAA,EAAD,CAAU1F,IAAK3F,EAAKG,IACxB,kBAACoL,GAAA,EAAD,MAEI,kBAACE,GAAA,EAAD,CAAc9F,IAAM3F,EAAKG,IACrB,wBAAIzE,UAAU,GAAGC,GAAG,WAApB,gEAA6C,6BAC7C,4BAAQA,GAAG,WAAW,0FAA+B,0BAAMA,GAAG,YAAYqE,EAAK+L,aAAmB,6BAClG,4BAAQpQ,GAAG,WAAW,uDAA0B,0BAAMA,GAAG,YAAaqE,EAAKe,KAAO,IAAMf,EAAKiB,UAAiB,6BAC9G,4BAAQtF,GAAG,WAAW,8BAAqB,0BAAMA,GAAG,YAAYqE,EAAKmB,KAAW,6BAChF,4BAAQxF,GAAG,WAAW,wBAAoB,0BAAMA,GAAG,YAAYqE,EAAKqB,eAAqB,6BACzF,4BAAQ1F,GAAG,WAAW,gDAAwB,0BAAMA,GAAG,YAAYqE,EAAKuB,eAAqB,6BAC7F,4BAAQ5F,GAAG,WAAW,oCAAsB,0BAAMA,GAAG,YAAYqE,EAAKyB,KAAW,6BACjF,4BAAQ9F,GAAG,WAAW,8EAA6B,0BAAMA,GAAG,YAAYqE,EAAK2B,UAAgB,6BAC7F,4BAAQhG,GAAG,WAAW,kHAAmC,0BAAMA,GAAG,YAAYqE,EAAK6D,oBAA0B,6BAC7G,wBAAIlI,GAAG,UAAUD,UAAU,QAA3B,qNACI,kBAACiO,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKgM,cAAeC,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,+FAAmB,6BACzI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKkM,cAAeD,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,uHAAuB,6BAC7I,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKmM,cAAeF,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,yFAAkB,6BAC5I,4BAAQnM,GAAG,WAAW,sDAAyB,0BAAMA,GAAG,YAAYqE,EAAKmD,aAAmB,6BACxF,kBAACwG,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKoM,cAAeH,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,qDAAY,6BAClI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKqM,cAAeJ,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,iBAAM,6BAC5H,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKsM,cAAeL,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,+CAAW,6BACjI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKuM,cAAeN,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,yCAAU,6BAChI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKwM,cAAeP,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,mFAAiB,6BACvI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAKyM,cAAeR,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,iEAAc,6BACpI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAK0M,cAAeT,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,qDAAY,6BAClI,kBAAC6B,GAAA,EAAD,CAAkBC,QAAU,kBAACC,GAAA,EAAD,CAAUlB,QAAS3I,EAAK2M,cAAeV,UAAQ,EAACvQ,UAAU,OAAOgJ,MAAM,YAAaoD,MAAM,kKAA+B,6BACzJ,4BAAQnM,GAAG,WAAW,0CAAuB,0BAAMA,GAAG,YAAYqE,EAAKqD,aAAmB,6BAC1F,4BAAQ1H,GAAG,WAAW,4DAA0B,0BAAMA,GAAG,YAAYqE,EAAKuD,UAAgB,6BAC1F,4BAAQ5H,GAAG,WAAW,kEAA2B,0BAAMA,GAAG,YAAYqE,EAAK8L,YAAkB,gCAK7G,kBAACiB,EAAA,EAAD,iBAgBhC,yBAAKrR,UAAU,OAIX,yBAAKA,UAAU,yBAW3B,4BAAQA,UAAU,0BACd,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,iCACX,sEAQhB,yBAAKA,UAAU,uBACX,6BACY,kBAAC+K,EAAA,EAAD,CAAQC,WAAS,EACjBC,oBAAqBhI,GACjBE,KAAME,EAAmB6H,QAASJ,GAClCtK,kBAAgB,oBAAoBP,GAAG,WACnC,wBAAIA,GAAG,UAAUD,UAAU,kBAA3B,8CACA,kBAACqL,GAAA,EAAD,KACI,kBAACiG,GAAA,EAAD,CAAmBrR,GAAG,WAAtB,wIAC2B,gCAAUsI,IADrC,oIACmF,0EADnF,KAGA,0BAAMtI,GAAG,UAAU2B,KAAK,UAAU0J,SA50BvB,SAACC,GAC5CA,EAAEC,iBAnGN,WACI,IAAI+F,EAAQ,CACRtR,GAAGoI,GACHN,uBAAuBA,GACvByJ,MAAM/I,IACVtJ,IAAMsS,IAAI,+BAA+BF,GACpClS,MAAK,SAAUC,OA8FpBoS,GACApO,GAAqB,GAErBkG,KACAsC,MAAM,kEAAiB/D,MAu0Ba,kBAACiE,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAS,EACTyF,OAAO,QACP1R,GAAG,OACHmM,MAAM,+DACNE,WAAY,CAAC1L,MAAO,CAACuI,WAAW,SAChCsD,gBAAiB,CAAC7L,MAAO,CAACuI,WAAW,SACrCtK,MAAQkJ,GACR2E,SAAW,SAAAC,GAAK,OAAK3E,GAA0B2E,EAAMC,OAAO/N,QAC5DsN,KAAK,OACLnB,WAAS,IAET,6BAAK,6BAOL,uBAAG/K,GAAG,WAAN,8IACA,kBAAC+M,EAAA,EAAD,CAEIC,QAAoC,iEAA3BxE,GACTiE,SAAW,SAAAC,GAAK,OAAKjE,GAA0BiE,EAAMC,OAAO/N,QAC5DA,MAAM,+DACNmK,MAAM,UACNpH,KAAK,oBACL0K,WAAY,CAAE,aAAc,OAC9B,0BAAMrM,GAAG,WAAT,gEACF,kBAAC+M,EAAA,EAAD,CACIC,QAAoC,6EAA3BxE,GACTiE,SAAW,SAAAC,GAAK,OAAKjE,GAA0BiE,EAAMC,OAAO/N,QAC5DA,MAAM,2EACNmK,MAAM,YACNpH,KAAK,oBACL0K,WAAY,CAAE,aAAc,OAC9B,0BAAMrM,GAAG,WAAT,8EAKd,kBAACqO,GAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CACItO,GAAG,eACHoM,QAAQ,YACRrD,MAAM,YACNwF,KAAK,QACLC,QAAS3D,IAA+B,kBAACsG,EAAA,EAAD,CAAYnR,GAAG,WAAf,yCAE5C,kBAACsO,EAAA,EAAD,CACIG,KAAK,UACLvC,KAAK,SACLlM,GAAG,cACHoM,QAAQ,YACRrD,MAAM,UACNwF,KAAK,SAGD,kBAAC4C,EAAA,EAAD,CAAYnR,GAAG,WAAf,+CCt2CjC2R,GAVK,WAGhB,OACI,4CCmBOC,OAlBf,WACE,OACE,yBAAK5R,GAAG,WAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6R,OAAK,EAACC,KAAK,IAAIhF,UAAW7P,IACjC,kBAAC,IAAD,CAAO4U,OAAK,EAACC,KAAK,WAAWhF,UAAW7J,KACxC,kBAAC,IAAD,CAAO6J,UAAW6E,QCJRI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAUC,mBACvB,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxT,MAAK,SAAAyT,GACJA,EAAaC,gBAEdnH,OAAM,SAAAC,GACLtH,QAAQsH,MAAMA,EAAMmH,c","file":"static/js/main.2d8c339f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/survey.b291413a.svg\";","module.exports = __webpack_public_path__ + \"static/media/male.81fa839a.svg\";","module.exports = __webpack_public_path__ + \"static/media/female.35f48a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fever.c8faaac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/exercise.ed9f707b.svg\";","module.exports = __webpack_public_path__ + \"static/media/patient.87f44aed.svg\";","module.exports = __webpack_public_path__ + \"static/media/funeral.f2270a68.svg\";","import React, { Fragment,useState, useEffect } from 'react'\nimport axios from 'axios';\nimport AnimatedNumber from \"animated-number-react\";\nimport anime from 'animejs/lib/anime.es.js'\nimport moment from 'moment'\nimport male from './Components/male.svg'\nimport female from './Components/female.svg'\nimport fever from './Components/fever.svg'\nimport exercise from './Components/exercise.svg'\nimport patient from './Components/patient.svg'\nimport funeral from './Components/funeral.svg'\nimport { Treemap, PieChart, Pie,ResponsiveContainer, \n    ComposedChart, LineChart, Line, AreaChart, \n    Area, CartesianGrid, BarChart, Bar, XAxis, \n    YAxis, Tooltip, Legend, Sector, Cell } from 'recharts';\n\nimport { Link ,Redirect} from 'react-router-dom';\nimport {Nav} from 'react-bootstrap';\n\nexport default function Home() {\n    \n    // window.onload = function() {\n    //         Get7Days();\n    //         GetDataCovid();\n    //         GetProvinceAndGender();\n    //         TimeRanger ()\n    // }\n    \n    const [TableCovid, setTableCovid] = useState();\n    const [Confirmed, setConfirmed] = useState();\n    const [NewConfirmed, setNewConfirmed] = useState();\n    const [Recovered, setRecovered] = useState();\n    const [Hospitalized, setHospitalized] = useState();\n    const [NewHospitalized, setNewHospitalized] = useState();\n    const [Deaths, setDeaths] = useState();\n    const [NewRecovered, setNewRecovered] = useState();\n    const [NewDeaths, setNewDeaths] = useState();\n    const [UpdateDate, setUpdateDate] = useState();\n    const [Province, setProvince] = useState([]);\n    const [Gender, setGender] = useState([]);\n    const [DailyData, setDailyData] = useState([]);\n    const [xxxx2, setxxxx2] = useState();\n\n    const formatValue = value => value.toFixed(0);\n    \n    \n\n    const Animated = anime({\n        targets: '.xxxx',\n        translateX: [0,50],\n        // easing: 'easeInOutExpo'\n\n      }); \n\n    // const Animated2 = anime({\n    //     targets: '.wow',\n    //     innerHTML: [0, 1000],\n        \n    //     easing: 'easeInOutExpo',\n    //     direction: 'alternate',\n    //     loop: 3,\n    //     // rotate: 360,\n        \n    //     round: 1 // Will round the animated value to 1 decimal\n    // })\n\n    function GetDataCovid (){\n        return axios.get('https://covid19.th-stat.com/api/open/today') \n        .then(function (response) {\n            const data = response.data;\n            // console.table(data)\n            setTableCovid(data);\n            setConfirmed(data.Confirmed)\n            setNewConfirmed(data.NewConfirmed)\n            setRecovered(data.Recovered)\n            setHospitalized(data.Hospitalized)\n            setNewHospitalized(data.NewHospitalized)\n            setDeaths(data.Deaths)\n            setNewRecovered(data.NewRecovered)\n            setNewDeaths(data.NewDeaths)\n            setUpdateDate(data.UpdateDate)\n            })}\n\n    function Get7Days (item){\n        axios.get('https://covid19.th-stat.com/api/open/timeline') \n        .then(function (response) {\n            const Original = response.data;\n            const QueryData = Original.Data \n            setDailyData(QueryData)\n        //    const result7Days = QueryDate.map((item) => {\n        //         return(\n        //             item.Date > moment().subtract(7, 'days').calendar()\n        //             ?\n        //                 <p key={item.Date}>\n        //                     {console.log(item.Date, item.NewConfirmed)}\n        //                     {item.Date}{\" \"}{item.NewConfirmed}\n                            \n        //                 </p>\n                    \n        //             :null\n        //             )    \n        //         })\n            // console.log(result7Days)\n            \n            // setSevenDays(result7Days)\n        })}\n\n    function GetProvinceAndGender (){\n        return axios.get('https://covid19.th-stat.com/api/open/cases/sum') \n        .then(function (response) {\n            const data = response.data;\n            setProvince(data.Province)\n            setGender(data.Gender)\n            \n            \n        },[])}\n\n    function TimeRanger (){\n        const CurrentTime = moment().format('L'); \n        const PassedTime = moment().subtract(7, 'days').calendar();\n        // console.table(CurrentTime)\n        // console.table(PassedTime)\n    }\n\n\n    function ChartNCandNR (){\n        const Selected7Days = DailyData.slice(-7)\n        return(\n            // old 600 350\n            <ResponsiveContainer >\n                <ComposedChart width={750} height={320} data={Selected7Days}>\n                    <XAxis dataKey=\"Date\" stroke=\"#8884d8\" />\n                    <YAxis/>\n                    <Tooltip wrapperStyle={{ width: 200, backgroundColor: '#ccc' }} />\n                    <Legend/>\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Bar name=\"New Infected\" dataKey=\"NewConfirmed\" fill=\"#5B8BEB\" barSize={30} />\n                    <Bar name=\"New Recovered\" dataKey=\"NewRecovered\" fill=\"#AEED76\" barSize={30} />\n                </ComposedChart>\n            </ResponsiveContainer>\n        )\n    }\n\n    function ChartConfirmedandRecovered (){\n        return(\n            <ResponsiveContainer>\n                <ComposedChart width={750} height={320} data={DailyData}>\n                    <XAxis dataKey=\"Date\" stroke=\"#8884d8\"  />\n                    <YAxis/>\n                    <Tooltip wrapperStyle={{ width: 200, backgroundColor: '#ccc' }} />\n                    <Legend verticalAlign=\"bottom\" height={36}/>\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Area dataKey=\"Confirmed\" fill=\"#5B8BEB\" barSize={30} stroke=\"#5B8BEB\"/>\n                    <Area dataKey=\"Recovered\" fill=\"#AEED76\" barSize={30} stroke=\"#AEED76\"/>\n                </ComposedChart>\n            </ResponsiveContainer>\n        )\n    }\n\n    const Onloadxx =()=>{\n        Get7Days();\n            GetDataCovid();\n            GetProvinceAndGender();\n            TimeRanger ()\n    }\n\n    useEffect(() => {\n        Onloadxx()\n        // console.log(\"UseEffect\")\n        // console.log(xxxx)\n        // console.log(TableCovid)\n        // console.table(Province)\n        // console.log(Gender)\n        // console.table(\"State Date\",Date)\n        // console.log(SevenDays)\n        // console.log(...DailyData)\n        \n        \n        }, [])\n\n    \n    return (\n\n        <Fragment>\n            {/* Page Wrapper */}\n        \n{/* **************** Sidebar ******************** */}\n            {/* Sidebar */}\n            <ul className=\"navbar-nav bg-gradient-dark sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n    {/* **************** Big Home ******************** */}\n                {/* Sidebar - Brand */}\n                <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"/\">\n                    <div class=\"sidebar-brand-icon rotate-n-15\">\n                        <i className=\"fas fa-fw fa-tachometer-alt\" />\n                    </div>\n                    <div class=\"sidebar-brand-text mx-3\">Home</div>\n                </a>\n\n    {/* **************** Menu Begin ******************** */}\n                <div className=\"sidebar-heading\" >\n                    Menu\n                </div>\n\n                {/* Nav Item - Pages Collapse Menu */}\n                <li className=\"nav-item\">\n                    <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n                        <i className=\"fas fa-fw fa-cog\" />\n                        <span>Route:</span>\n                    </a>\n                    <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\n                            <h6 className=\"collapse-header\">Pages:</h6>\n                            <Link to =\"/\" className=\"collapse-item\" href=\"/\">Home</Link>\n                            <Link to =\"/NewCase\" className=\"collapse-item\" href=\"/NewCase\">Add new case</Link>\n                        </div>\n                    </div>\n                </li>\n\n                {/* Divider */}\n                <hr className=\"sidebar-divider\" />\n            </ul>\n\n{/* **************** Content ******************** */}\n            {/* Content Wrapper */}\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                {/* Main Content */}\n                <div id=\"content\">\n\n    {/* **************** TopBar Box ******************** */}\n                    {/* Topbar */}\n                    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n                    {/* <button onClick={() =>Onloadxx()}>wow</button> */}\n        {/* **************** BigBoxGirl ******************** */}\n                        {/* Topbar Navbar */}\n                        {/* <ul className=\"navbar-nav ml-auto \"> */}\n                            {/* Nav Item - Messages */}\n                            {/* <div className=\"topbar-divider d-none d-sm-block \" /> */}\n\n        {/* **************** BoxGirl ******************** */}\n                            {/* Nav Item - User Information */}\n                            {/* <li className=\"nav-item dropdown no-arrow \">\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Name Shit</span>\n                                    <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\n                                </a> */}\n\n        {/* **************** DropdownGirl ******************** */}\n                                {/* Dropdown - User Information */}\n                                {/* <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in \" aria-labelledby=\"userDropdown\">\n                                    <a className=\"dropdown-item\" href=\"#\">\n                                        <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Profile\n                                        </a>\n                                    <a className=\"dropdown-item\" href=\"#\">\n                                        <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Settings\n                                        </a>\n                                    <a className=\"dropdown-item\" href=\"#\">\n                                        <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Activity Log\n                                        </a>\n                                    <div className=\"dropdown-divider\" />\n                                    <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                                        <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Logout\n                                        </a>\n                                </div>\n                            </li>\n                        </ul> */}\n                    </nav>\n                    {/* End of Topbar */}\n\n    {/* **************** ContentBox ******************** */}\n        {/* **************** ContentBoxTop ******************** */}\n                    {/* Begin Page Content */}\n                    <div className=\"container-fluid\">\n                        {/* Page Heading */}\n                        <div className=\"d-sm-flex align-items-center justify-content-between mb-1 \">\n                            <h1 className=\"h1 mb-0 text-gray-800\">Thailand Situation</h1>\n                            {/* <h1 className='wow'></h1> */}\n                            \n                        </div>\n                            <p class='mb-4' id='runnn'>updated: {UpdateDate}</p><br/>\n\n        {/* **************** Cards ******************** */}\n                        {/* Content Row */}\n                        <div className=\"row\">\n\n            {/* **************** Cards1 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4 \">\n                                <div className=\"card border-left-primary shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-primary text-uppercase mb-1\">Infected</div>\n                                                <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                    <div class='xxxx'>\n                                                        <AnimatedNumber\n                                                        value={Confirmed}\n                                                        duration={1300}\n                                                        formatValue={formatValue}\n                                                        />\n                                                    </div>\n                                                </div><br/>\n                                                <div>New Infected{\" \"}{NewConfirmed}</div>\n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={fever}/>\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n            {/* **************** Cards2 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4\">\n                                <div className=\"card border-left-success shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-success text-uppercase mb-1\">Recovered</div>\n                                                    <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                        <div class='xxxx'>\n                                                            <AnimatedNumber\n                                                            value={Recovered}\n                                                            duration={1300}\n                                                            formatValue={formatValue}\n                                                            />\n                                                        </div>\n                                                    </div><br/>\n                                                    <div>New Recovered{\" \"}{NewRecovered}</div>\n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={exercise}/>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n            {/* **************** Cards3 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4\">\n                                <div className=\"card border-left-warning shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-warning text-uppercase mb-1\">Hospitalized</div>\n                                                    <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                        <div class='xxxx'>\n                                                            <AnimatedNumber\n                                                            value={Hospitalized}\n                                                            duration={1300}\n                                                            formatValue={formatValue}\n                                                            />\n                                                        </div>\n                                                    </div><br/>\n                                                    <div>New Hospitalized{\" \"}{NewHospitalized}</div>\n                                                    \n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={patient}/>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \n            {/* **************** Cards4 ******************** */}\n                            <div className=\"col-xl-3 col-md-6 mb-4\">\n                                <div className=\"card border-left-danger shadow h-100 py-2\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row no-gutters align-items-center\">\n                                            <div className=\"col mr-2\">\n                                                <div className=\"text-sm font-weight-bold text-danger text-uppercase mb-1\">Deaths</div>\n                                                    <div className=\"h3 mb-0 font-weight-bold text-gray-800\">\n                                                        <div class='xxxx'>\n                                                            <AnimatedNumber\n                                                            value={Deaths}\n                                                            duration={1300}\n                                                            formatValue={formatValue}\n                                                            />\n                                                        </div>\n                                                    </div><br/>\n                                                    <div>New Deaths{\" \"}{NewDeaths}</div>\n                                                    \n                                            </div>\n                                            <img style={{ width: \"15%\", opacity: \"0.5\"}} src={funeral}/>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n        {/* **************** UnderCards ******************** */}                \n                        {/* Content Row */}\n                        <div className=\"row\">\n                            {/* Area Chart */}\n                            <div className=\"col-xl-6 col-lg-12 col-md-12\">\n                                <div className=\"card shadow mb-4\">\n                                    {/* Card Header - Dropdown */}\n                                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Information of infected in 7 Days</h6>\n                                    </div>\n                                    {/* Card Body */}\n                                    <div className=\"card-body\">\n                                        <div className=\"chart-area pb-2\">\n                                            {/* {Monitor()} */}\n                                            {ChartNCandNR()}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Pie Chart */}\n                            <div className=\"col-xl-6 col-lg-12 col-md-12\">\n                                <div className=\"card shadow mb-4\">\n                                    {/* Card Header - Dropdown */}\n                                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Information since January</h6>\n                                    </div>\n                                    {/* Card Body */}\n                                    <div className=\"card-body\">\n                                        <div className=\"chart-pie pt-4 pb-5\">\n                                            {ChartConfirmedandRecovered()}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Pie Chart */}\n                            <div className=\"col-xl-5 col-lg-12 col-md-12 col-sm-6\">\n                                <div className=\"card shadow pb-5 mb-4\">\n                                    {/* Card Header - Dropdown */}\n                                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Infecter's gender </h6>\n                                    </div>\n                                    {/* Card Body */}\n                                    <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                \n                                                <div class='col col-5 col-md-5 col-sm-12 col-xs-12'>\n                                                <img style={{ width: \"70%\"}} src={male}/>\n                                                <br/><br/>\n                                                    <h3>Male: {Gender.Male}</h3>\n                                                </div>\n\n                                                <div class='col '/>\n\n                                                \n                                                <div class='col col-5 col-md-5'>\n                                                <img style={{ width: \"70%\"}} src={female}/>\n                                                    <br/><br/>\n                                                    <h3>Female: {Gender.Female}</h3>\n                                                </div>\n                                            </div>    \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* Content Row */}\n                    </div>\n                    {/* /.container-fluid */}\n                </div>\n\n{/* **************** Footer ******************** */}\n                {/* Footer */}\n                <footer className=\"sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>Copyright © Shit Website 2077</span>\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        </Fragment>\n\n    )\n}\n","import React, { Fragment,useState, useEffect } from 'react'\nimport './Components/App.css';\nimport axios from 'axios';\nimport moment from 'moment'\nimport Box from \"@material-ui/core/Box\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Card from '@material-ui/core/Card';\nimport Zoom from '@material-ui/core/Zoom';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport Badge from '@material-ui/core/Badge';\nimport Radio from '@material-ui/core/Radio';\n// import socketIOClient from 'socket.io-client';\nimport Avatar from '@material-ui/core/Avatar';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Select from '@material-ui/core/Select';\nimport Slide from '@material-ui/core/Slide';\n// import FaceIcon from '@material-ui/icons/Face';\n// import MailIcon from '@material-ui/icons/Mail';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {DatePicker} from '@material-ui/pickers';\nimport Divider from \"@material-ui/core/Divider\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link, NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport TextField from '@material-ui/core/TextField';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { withStyles} from \"@material-ui/core/styles\";\nimport { FaBoxOpen, FaReceipt} from \"react-icons/fa\";\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport survey from './Components/survey.svg'\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  import MomentUtils from '@date-io/moment';\n  import DateFnsUtils from '@date-io/date-fns';\n  import {Nav} from 'react-bootstrap';\n\n\n    const useStyles = makeStyles({\n        list: { width: 250}\n      });\n    \n    var dateFormat = require('dateformat');\n\n    const Transition = React.forwardRef(function Transition(props, ref) {\n        return <Slide direction=\"right\" ref={ref} {...props} />;\n      });\n\n    const Transition2 = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n    });\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\" />;\n      }\n\n    const NewCase =()=>{\n        \n        // window.onload = function() {\n        //     MenuAddress();\n        //         updateValue ()\n        //         TimeRanger();\n        //     handleClickxxB3();\n        //     handleClickxxB2();\n        //     handleClickxxB1();\n        // }\n\n        const [open, setOpen] = useState(false);\n        const [OpenconfirmAccept, setOpenconfirmAccept] = useState(false);\n    \n        const [ShowAddressxx, setShowAddressxx] = useState();\n        const [DateTimeNow, setDateTimeNow] = useState();\n        const [Monthx, setMonthx] = useState();\n        const [Yearx, setYearx] = useState();\n        const [DataBoxLeft, setDataBoxLeft] = useState([]);\n        const [DataBoxMid, setDataBoxMid] = useState([]);\n        const [DataBoxRight, setDataBoxRight] = useState([]);\n    \n    \n        const [openx, setOpenx] = useState(true);\n        const handleClickxx=(item)=> {\n            console.log(\"Handle Clicked....\"+item.ID);\n            // console.log(openx)\n            setOpenx({...openx,[item.ID]:!openx[item.ID]});\n            }\n        const [openB1, setOpenB1] = useState(true);\n        const handleClickxxB1=(item)=> {\n            // console.log(\"Handle Clicked....\"+'B1');\n            // console.log(openB2)\n            setOpenB1({...openB1,['B1']:!openB1['B1']});\n            }\n        const [openB2, setOpenB2] = useState(true);\n        const handleClickxxB2=(item)=> {\n            // console.log(\"Handle Clicked....\"+'B2');\n            // console.log(openB2)\n            setOpenB2({...openB2,['B2']:!openB2['B2']});\n            }\n        const [openB3, setOpenB3] = useState(true);\n        const handleClickxxB3=(item)=> {\n            // console.log(\"Handle Clicked....\"+'B2');\n            // console.log(openB3)\n            setOpenB3({...openB3,['B3']:!openB3['B3']});\n            }\n    \n        // const [state, setState] = React.useState({\n        //         right: false\n        //       });\n        // const toggleDrawer = (side, open) => event => {\n        //     setState({ ...state, [side]: open });\n        //     };\n        //    const sideList = side => (\n        //         <div\n        //           className={classes.list}\n        //           role=\"presentation\"\n        //         //   id=\"borderTest\"\n        //           >\n        //             <Card elevation={1} variant=\"outlined \"  id='shitCardTop1'>\n        //                 <h3 className='text-center p-4' id='useFont'>เลือกเดือน</h3>\n        //             </Card>\n        //             <Card elevation={5}>\n        //                 <div class='text-center ml-3 m-3 p-1' id='shitCardxx'>\n        //                     <DatePicker\n        //                         id='shitCardxx'\n        //                         variant=\"inline\"\n        //                         openTo=\"month\"\n        //                         orientation=\"portrait\"\n        //                         inputProps={{style: {fontFamily:'Mitr'}}} \n                    \n        //                         // animateYearScrolling='true'\n        //                         views={[\"year\", \"month\"]}\n        //                         value={SelectedDate}\n        //                         onChange={(date)=>{SetMonth(date)}}/>\n                        \n        //                     <Button variant=\"contained\" color=\"secondary\" onClick={()=>{Reload()}} size=\"large\" id='Spacing'>\n        //                     ล้างค่า\n        //                     </Button>\n        //                 </div>\n        //             </Card>\n        //         </div>\n        //       );\n    \n       \n    {/* **************** New ******************** */}  \n        const [PersoID, setPersoID] = useState([]); \n        const [Name, setName] = useState([]); \n        const [LastName, setLastName] = useState([]); \n        const [Age, setAge] = useState([]); \n        const [Genderchecked, setGenderchecked] = useState('ชาย');\n        const [AddressPerson, setAddressPerson] = useState([]); \n        const [Job, setJob] = useState([]); \n        const [Comefrom, setComefrom] = useState([]); \n\n        const [stateCheckA, setStateCheckA] = useState(0)\n        const [stateCheckB, setStateCheckB] = useState(0)\n        const [stateCheckC, setStateCheckC] = useState(0)\n        const [stateCheckD, setStateCheckD] = useState(0)\n        const [stateCheckE, setStateCheckE] = useState(0)\n        const [stateCheckF, setStateCheckF] = useState(0)\n        const [stateCheckG, setStateCheckG] = useState(0)\n        const [stateCheckH, setStateCheckH] = useState(0)\n        const [stateCheckI, setStateCheckI] = useState(0)\n        const [stateCheckJ, setStateCheckJ] = useState(0)\n        const [stateCheckK, setStateCheckK] = useState(0)\n        \n        const [Temperature, setTemperature] = useState([]); \n        const [checkedRisk, setCheckedRisk] = useState('กักตัวเพื่อรอดูอาการ');\n        const [Recorder, setRecorder] = useState([]);\n        const [RecorderWhoChangeState, setRecorderWhoChangeState] = useState([]);\n       \n        const [DateArrivedVillage, setDateArrivedVillage] = useState(new Date().toLocaleDateString()); \n        const onDateChange = (date) => {\n            const fullDate = date\n            const Day = dateFormat(fullDate, \"dd\");\n            const Month = dateFormat(fullDate, \"mm\");\n            const Year = dateFormat(fullDate, \"yyyy\");\n            const Formatted = Month +\"/\"+ Day +\"/\"+ Year\n            // console.log(\"pickdate01 : \" + fullDate)\n            // console.log(\"pickdate02 : \" + Formatted)\n            // console.log(\"SelectedDate : \" + SelectedDate)\n            setDateArrivedVillage(Formatted);\n          };\n\n    {/* **************** Accept ******************** */}  \n    const [GetIDParcel, setGetIDParcel] = useState();\n        const [AcceptPeople, setAcceptPeople] =useState();\n        const [checkedAfterquarantine, setCheckedAfterquarantine] = useState('มีความเสี่ยง');\n\n        const [Monthza, setMonthza] = useState('All'); \n        const [Yearza, setYearza] = useState('All'); \n\n {/* **************** Style ******************** */}    \n          const BoxStsProps1 = {\n            bgcolor: \"background.paper\",\n            borderColor: \"GoldenRod\",\n            color: \"GoldenRod\",\n            m: 1,\n            border: 1,\n            fontFamily:'Mitr',\n            style: { width: \"10rem\", height: \"2rem\",textAlign: \"center\" }\n          };\n          const BoxStsProps2 = {\n            bgcolor: \"background.paper\",\n            borderColor: \"Crimson\",\n            color: \"Crimson\",\n            m: 1,\n            border: 1,\n            fontFamily:'Mitr',\n            style: { width: \"7rem\", height: \"2rem\",textAlign: \"center\" }\n          };\n          const BoxStsProps3 = {\n            bgcolor: \"background.paper\",\n            borderColor: \"Green\",\n            color: \"Green\",\n            m: 1,\n            border: 1,\n            fontFamily:'Mitr',\n            style: { width: \"7rem\", height: \"2rem\",textAlign: \"center\" }\n          };\n           /*\n            ! แดง-เหลือง-เขียว indicator\n            */\n          const classes = useStyles();\n    \n{/* **************** Process function ******************** */}             \n        function GetData (item){\n            let info ={\n                    params: {\n                        id:item.ID\n                    }} \n            setGetIDParcel(item.ID)\n            \n            \n            axios.get('http://localhost:4000/SpecificDatatoAccept',info)\n                .then(function (response){\n                    const dataSpecific = response.data;\n                    console.log(dataSpecific)\n                    dataSpecific.map((item)=>\n                    setAcceptPeople(item.Name),\n                        \n            )})}\n\n        function PrePost (e){\n            e.preventDefault()\n            setTimeout(() => {\n                setOpen(false);\n                PostToDatabase();\n                }, 500);  \n                }\n    \n        function PostToDatabase (e){\n            let formData = {\n                PersoID:PersoID,\n                Name:Name,\n                LastName:LastName,\n                Age:Age,\n                Genderchecked:Genderchecked,\n                AddressPerson:AddressPerson,\n                Job:Job,\n                Comefrom:Comefrom,\n                DateArrivedVillage:DateArrivedVillage,\n                stateCheckA:stateCheckA,\n                stateCheckB:stateCheckB,\n                stateCheckC:stateCheckC,\n                Temperature:Temperature,\n                stateCheckD:stateCheckD,\n                stateCheckE:stateCheckE,\n                stateCheckF:stateCheckF,\n                stateCheckG:stateCheckG,\n                stateCheckH:stateCheckH,\n                stateCheckI:stateCheckI,\n                stateCheckJ:stateCheckJ,\n                stateCheckK:stateCheckK,\n                checkedRisk:checkedRisk,\n                Recorder:Recorder,\n                DateTimeNow:DateTimeNow\n            }\n    \n            axios.post('http://localhost:4000/PostToDatabase', formData)\n                .then(function (response) {\n                    console.log(response);\n              })\n                .catch(function (error) {\n                    console.log(error);\n              });\n    \n              TimeRanger();\n              \n              setTimeout(() => {\n                updateValue ()\n                alert('เพิ่มแบบสำรวจสำเร็จ')\n                Clearfield ()\n                // window.location.reload(false)\n                }, 500);  \n                }\n\n        function Clearfield (){\n            setPersoID([])\n            setName([])\n            setLastName([])\n            setAge([])\n            setGenderchecked('ชาย');\n            setAddressPerson([])\n            setJob([])\n            setComefrom([])\n            setStateCheckA(0)\n            setStateCheckB(0)\n            setStateCheckC(0)\n            setStateCheckD(0)\n            setStateCheckE(0)\n            setStateCheckF(0)\n            setStateCheckG(0)\n            setStateCheckH(0)\n            setStateCheckI(0)\n            setStateCheckJ(0)\n            setStateCheckK(0)\n            setTemperature([])\n            setCheckedRisk('กักตัวเพื่อรอดูอาการ');\n            setRecorder([])\n            setRecorderWhoChangeState([])\n            setDateArrivedVillage(new Date().toLocaleDateString()); \n        }\n    \n        function Quarantine (){\n            var info ={\n                params: {\n                    Monthza:Monthza,\n                    Yearza:Yearza\n                }}\n    \n            return axios.get('http://localhost:4000/Quarantine',info) \n            .then(function (response) {\n                const data = response.data;\n                // console.table(data)\n                setDataBoxLeft(data);\n                \n                })}\n\n        function YouRiskNow (){\n            var info ={\n                params: {\n                    Monthza:Monthza,\n                    Yearza:Yearza\n                }}\n    \n            return axios.get('http://localhost:4000/YouRiskNow',info) \n            .then(function (response) {\n                const data = response.data;\n                // console.table(data)\n                setDataBoxMid(data);\n                \n                })}\n        function NoCovid (){\n            var info ={\n                params: {\n                    Monthza:Monthza,\n                    Yearza:Yearza\n                }}\n    \n            return axios.get('http://localhost:4000/NoCovid',info) \n            .then(function (response) {\n                const data = response.data;\n                // console.table(data)\n                setDataBoxRight(data);\n                \n                })}\n                \n        function Accept (){\n            var accept ={\n                id:GetIDParcel,\n                RecorderWhoChangeState:RecorderWhoChangeState,\n                Check:checkedAfterquarantine}\n            axios.put('http://localhost:4000/Accept',accept)\n                .then(function (response){\n                    // ohWow();  \n            })}\n\n        function updateValue (){\n            Quarantine ()\n            YouRiskNow ()\n            NoCovid ()\n        }\n\n        const Onloadxx =()=>{\n            MenuAddress();\n            updateValue ()\n            TimeRanger();\n        handleClickxxB3();\n        handleClickxxB2();\n        handleClickxxB1();\n        }\n\n        const MenuAddress =()=>{\n            axios.get('http://localhost:4000/address')\n            .then(function(response){\n                const dataAddress = response.data;\n                const DropdownAddress = dataAddress.map((item) =>\n                        <option \n                        key={ item.ID_ADDRESS } \n                        value={ item.Address_Name} \n                        // onChange={ ()=> { setAddressza(item.Address_Name) }} \n                        fullwidth >\n                            { item.Address_Name}\n                    </option>)\n                    setShowAddressxx(DropdownAddress)}\n                   )}\n        \n        function TimeRanger(){\n            var DateTime = moment().format('L') +' '+moment().format('LT');\n            var Day = moment().format('DD');  \n            var Month = moment().format('MMMM'); \n            var Year = moment().format('YYYY');  \n            setDateTimeNow(DateTime)\n            setMonthx(Month)\n            setYearx(Year)\n            }\n    \n        // function SetMonth(date){\n        //     console.log(date)\n        //     var fullDate = date\n        //     setDateArrivedVillage(fullDate)\n        //     var Day = dateFormat(fullDate, \"mmmm\");\n        //     var Month = dateFormat(fullDate, \"mmmm\");\n        //     var Year = dateFormat(fullDate, \"yyyy\");\n        //     // setMonthza(Month)\n        //     // setYearza(Year)\n        //     // console.log(fullDate)\n        //     console.log(Day)\n        //     console.log(Month)\n        //     console.log(Year)\n        //     // OhSend();\n        //     // OhReceived ();\n        //     // แก้ทีหลัง\n        //     }\n        //     /*\n        //         !Select month side bar\n        //     */\n\n        function SelectAccept(item){\n            GetData (item);\n            handleClickOpenConfirmAccept();\n            }\n             /*\n                !ClickToAccept\n            */\n    \n        const handleClickOpen = () => {\n            setOpen(true);\n        };\n        const handleClose = () => {\n            setOpen(false);\n            // window.location.reload(false);\n            Clearfield ()\n            updateValue ()\n        };\n        /*\n            !Open-Close Dialog\n        */\n    \n        const handleClickOpenConfirmAccept = () => {\n                setOpenconfirmAccept(true);\n        };\n        const handleClickCloseConfirmAccept = () => {\n            setOpenconfirmAccept(false);\n        };\n        const handleClickCloseConfirmAcceptWihtAccept= (e) => {\n            e.preventDefault()\n            Accept();\n            setOpenconfirmAccept(false);\n            // window.location.reload(false);\n            updateValue ()\n            alert(\"ผู้แก้ไขผล : \"+ RecorderWhoChangeState)\n        };\n        /*\n            !Open-Close-Submit Accept Dialog\n        */\n\n    \n        useEffect(() => {\n            Onloadxx()\n            // setTimeout(() => {\n            //     console.log('Hello, World!')\n            //   }, 3000);\n\n            // console.log(DateTimeNow)\n            // console.log(\"UseEffect\")\n            // console.log(SelectedDate)\n            // console.log(\"Year\")\n            // console.log(Yearza)\n            // console.log(...DataBoxLeft)\n            // console.log(...DataBoxMid)\n            // console.log(\"เลขบัตร :\" + PersoID)\n            // console.log(\"ชื่อ :\" + Name)\n            // console.log(\"สกุล :\" + LastName)\n            // console.log(\"อายุ :\" + Age)\n            // console.log(\"เพศ :\" + Genderchecked)\n            // console.log(\"ที่อยู่ :\" + AddressPerson)\n            // console.log(\"อาชีพ :\" + Job)\n            // console.log(\"เดินทางมาจาก :\" + Comefrom)\n            // console.log(\"วันที่เข้าหมู่บ้าน :\" + DateArrivedVillage)\n            // console.table(stateCheckA)\n            // console.log(\"อุณหภูมิ :\" + Temperature)\n            // console.table(\"ระบุผล :\" + checkedRisk)\n            // console.table(\"ผู้รายงาน :\" + Recorder)\n\n        }, [])\n\n    return (\n\n       <Fragment>\n            {/* Page Wrapper */}\n\n{/* **************** Dialog ******************** */}            \n            <Dialog \n                fullWidth \n                open={open} \n                id='Dialog'\n                TransitionComponent={Transition}\n                className='p-5' \n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\" \n                class='container col col-sm-4 col-md-12 col-xl-8'\n                >\n                    <DialogTitle \n                    id=\"form-dialog-title\" \n                    className='text-center mt-3'>\n                        <h1 id='useFont'>แบบสำรวจผู้มีความเสี่ยงในพื้นที่ </h1>\n                        <img style={{ width: \"20%\"}} src={survey}/>\n                    </DialogTitle><hr/>\n                    <DialogContent>\n                    \n                    <form\n                    id=\"SEND\"\n                    name=\"SEND\"\n                    onSubmit={ PrePost }>\n                        <TextField \n                        required \n                        autoFocus\n                        fullWidth\n                        type=\"text\"\n                        label=\"เลขบัตรประชาชน\" \n                        // id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{minLength: 13  ,maxLength: 13, style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ PersoID }\n                                onChange={ event =>  setPersoID(event.target.value) }\n                        />\n                        <br/><br/>\n\n                        <TextField \n                        required \n                        // fullWidth\n                        type=\"text\"\n                        label=\"ชื่อ\" \n                        // id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Name }\n                                onChange={ event =>  setName(event.target.value) }\n                        />\n                        <span>   </span>\n\n                        <TextField \n                        required \n                        // fullWidth\n                        type=\"text\"\n                        label=\"นามสกุล\" \n                        // id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ LastName }\n                                onChange={ event =>  setLastName(event.target.value) }\n                        />\n                        <br/><br/>\n\n                        <TextField \n                        required \n                        // fullWidth\n                        type=\"number\"\n                        label=\"อายุ\" \n                        // id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{min: 1, maxLength: 3, style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Age }\n                                onChange={ event =>  setAge(event.target.value) }\n                        />\n                        <br/><br/>\n\n                        <FormLabel component=\"legend\" id='useFont'>เพศ</FormLabel>\n                        <Radio\n                            checked={Genderchecked === 'ชาย'}\n                            onChange={ event =>  setGenderchecked(event.target.value) }\n                            value=\"ชาย\"\n                            color='primary'\n                            name=\"radio-button-demo\"\n                            inputProps={{ 'aria-label': 'A' }}\n                        /><span id='useFont'>ชาย</span>\n                        <Radio\n                            checked={Genderchecked === 'หญิง'}\n                            onChange={ event =>  setGenderchecked(event.target.value) }\n                            value=\"หญิง\"\n                            color='secondary'\n                            name=\"radio-button-demo\"\n                            inputProps={{ 'aria-label': 'B' }}\n                        /><span id='useFont'>หญิง</span>\n                        <br/><br/>\n\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"outlined-textarea\"\n                            label=\"ที่อยู่\"\n                            multiline\n                            rows={4}\n                            variant=\"outlined\"\n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}}\n                                value={ AddressPerson }\n                                onChange={ event =>  setAddressPerson(event.target.value) }\n                        />\n                        <br/><br/>\n\n                        <TextField \n                        required \n                        // fullWidth\n                        type=\"text\"\n                        label=\"อาชีพ\" \n                        // id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Job }\n                                onChange={ event =>  setJob(event.target.value) }\n                        />\n                        <br/><br/>\n\n                        <FormControl required id='formControl'>\n                        <InputLabel htmlFor=\"age-native-simple\" id='useFont'>เดินทางมาจาก</InputLabel>\n                            <Select \n                            native\n                            required \n                            // fullwidth\n                            id=\"addressdropdown\" \n                            className='col col-11' \n                            select \n                            label=\"เดินทางมาจาก\" \n                                inputProps={{style: {fontFamily:'Mitr'}}} \n                                InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                    value={ Comefrom } \n                                    onChange={ event =>  setComefrom(event.target.value) } \n                            >\n                                { ShowAddressxx } \n                            </Select>\n                        </FormControl>\n                        <br/><br/>\n                        \n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                            required \n                            // autoOk\n                            id=\"JustPointer\"\n                            variant=\"inline\"\n                            label=\"วันที่เข้าหมุ่บ้าน (เดือน/วัน/ปี)\"\n                            className='col col-6' \n                            value={DateArrivedVillage}\n                            format=\"MM/dd/yyyy\"\n                            onChange={date => onDateChange(date)}\n                            />\n                        </MuiPickersUtilsProvider>\n                        <br/><br/>\n\n                        <h5 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h5>\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckA}\n                                onChange={ event =>  setStateCheckA(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckA\"\n                                color=\"primary\"\n                        />}label=\"ไปสถานที่เสี่ยง\"/>\n                        <br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckB}\n                                onChange={ event =>  setStateCheckB(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckB\"\n                                color=\"primary\"\n                        />}label=\"ไปสถานที่ที่มีคนมาก\"/>\n                        <br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckC}\n                                onChange={ event =>  setStateCheckC(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckC\"\n                                color=\"primary\"\n                        />}label=\"ใกล้ชิดผู้ป่วย\"/>\n                        <br/><br/>\n\n                        <TextField \n                        required \n                        // fullWidth\n                        type=\"number\"\n                        label=\"อุณหภูมิ\" \n                        className=\"col col-4\"\n                        // id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{min: 35, max: 45, maxLength: 3, step:\"0.1\", style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Temperature }\n                                onChange={  event =>  setTemperature(event.target.value)  }\n                        />\n                        <br/><br/>\n                        \n                        <h5 id=\"useFont\" className=\"ml-3\">อาการ</h5>\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckD}\n                                onChange={ event =>  setStateCheckD(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckD\"\n                                color=\"primary\"\n                        />}label=\"ปวดศีรษะ\"/><br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckE}\n                                onChange={ event =>  setStateCheckE(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckE\"\n                                color=\"primary\"\n                        />}label=\"ไอ\"/><br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckF}\n                                onChange={ event =>  setStateCheckF(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckF\"\n                                color=\"primary\"\n                        />}label=\"มีเสมหะ\"/><br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckG}\n                                onChange={ event =>  setStateCheckG(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckG\"\n                                color=\"primary\"\n                        />}label=\"เจ็บคอ\"/><br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckH}\n                                onChange={ event =>  setStateCheckH(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckH\"\n                                color=\"primary\"\n                        />}label=\"ปวดกล้ามเนื้อ\"/><br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckI}\n                                onChange={ event =>  setStateCheckI(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckI\"\n                                color=\"primary\"\n                        />}label=\"หายใจลำบาก\"/><br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckJ}\n                                onChange={ event =>  setStateCheckJ(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckJ\"\n                                color=\"primary\"\n                        />}label=\"ท้องเสีย\"/><br/>\n\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                checked={stateCheckK}\n                                onChange={ event =>  setStateCheckK(event.target.checked) }\n                                className=\"ml-5\"\n                                name=\"stateCheckK\"\n                                color=\"primary\"\n                        />}label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/>\n                        <br/><br/>\n\n                        <h5 id=\"useFont\" className=\"ml-3\">ระบุผล</h5>\n                        <Radio\n                            checked={checkedRisk === 'กักตัวเพื่อรอดูอาการ'}\n                            onChange={ event =>  setCheckedRisk(event.target.value) }\n                            className=\"ml-5\"\n                            value=\"กักตัวเพื่อรอดูอาการ\"\n                            color='primary'\n                            name=\"radio-button-demo\"\n                            inputProps={{ 'aria-label': 'A' }}\n                        /><span id='useFont'>กักตัวเพื่อรอดูอาการ</span>\n                        <Radio\n                            checked={checkedRisk === 'มีความเสี่ยง'}\n                            onChange={ event =>  setCheckedRisk(event.target.value) }\n                            className=\"ml-1\"\n                            value=\"มีความเสี่ยง\"\n                            color='secondary'\n                            name=\"radio-button-demo\"\n                            inputProps={{ 'aria-label': 'B' }}\n                        /><span id='useFont'>มีความเสี่ยง</span>\n                        <br/><br/>\n\n                        <TextField \n                        required \n                        fullWidth\n                        type=\"text\"\n                        label=\"ผู้รายงาน\" \n                        // id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Recorder }\n                                onChange={  event =>  setRecorder(event.target.value)  }\n                        />\n                        <br/><br/>\n                        </form>\n                    </DialogContent>\n                    \n                    <DialogActions>\n                    <br/><br/><br/><br/>\n                    <Button \n                    id='useFont'\n                    size=\"large\" \n                    color=\"secondary\"\n                    variant=\"contained\" \n                    onClick={ handleClose }  \n                    >\n                        ยกเลิก\n                    </Button>\n\n                    <Button \n                    form=\"SEND\"\n                    id='useFont'\n                    size=\"large\" \n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\" \n                     >\n                        เพิ่ม\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n\n{/* **************** Sidebar ******************** */}\n                {/* Sidebar */}\n                <ul className=\"navbar-nav bg-gradient-dark sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n    {/* **************** Big Home ******************** */}\n                    {/* Sidebar - Brand */}\n                    <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"/\">\n                        <div class=\"sidebar-brand-icon rotate-n-15\">\n                            <i className=\"fas fa-fw fa-tachometer-alt\" />\n                        </div>\n                        <div class=\"sidebar-brand-text mx-3\">Home</div>\n                    </a>\n\n    {/* **************** Menu Begin ******************** */}\n                    <div className=\"sidebar-heading\">\n                        Menu\n                    </div>\n                    {/* Nav Item - Pages Collapse Menu */}\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n                            <i className=\"fas fa-fw fa-cog\" />\n                            <span>Route:</span>\n                        </a>\n                        <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n                            <div className=\"bg-white py-2 collapse-inner rounded\">\n                                <h6 className=\"collapse-header\">Pages:</h6>\n                                <Link to =\"/\" className=\"collapse-item\" href=\"/\">Home</Link>\n                            <Link to =\"/NewCase\" className=\"collapse-item\" href=\"/NewCase\">Add new case</Link>\n                            </div>\n                        </div>\n                    </li>\n                    {/* Divider */}\n                    <hr className=\"sidebar-divider\" />\n                </ul>\n\n{/* **************** Content ******************** */}\n                {/* Content Wrapper */}\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                    {/* Main Content */}\n                    <div id=\"content\">\n\n    {/* **************** TopBar Box ******************** */}\n                        {/* Topbar */}\n                        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n                        {/* <button onClick={() =>Onloadxx()}>wow</button> */}\n                                {/* <div className=\"btn btn-danger\" onClick={()=>Quarantine()} >vbvb</div> */}\n        {/* **************** BigBoxGirl ******************** */}\n                            {/* Topbar Navbar */}\n                            {/* <ul className=\"navbar-nav ml-auto\"> */}\n                                {/* Nav Item - Messages */}\n                                {/* <div className=\"topbar-divider d-none d-sm-block\" /> */}\n        \n        {/* **************** BoxGirl ******************** */}\n                                {/* Nav Item - User Information */}\n                                {/* <li className=\"nav-item dropdown no-arrow\">\n                                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Valerie Luna</span>\n                                        <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\n                                    </a> */}\n\n        {/* **************** DropdownGirl ******************** */}\n                                    {/* Dropdown - User Information */}\n                                    {/* <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Profile\n                                        </a>\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Settings\n                                        </a>\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Activity Log\n                                        </a>\n                                        <div className=\"dropdown-divider\" />\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                                            <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Logout\n                                        </a>\n                                    </div>\n                                </li>\n                            </ul> */}\n                        </nav>\n                        {/* End of Topbar */}\n\n    {/* **************** ContentBox ******************** */}\n        {/* **************** ContentBoxTop ******************** */}\n                        {/* Begin Page Content */}\n                        <div className=\"container-fluid\">\n                            {/* Page Heading */}\n                            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                                <h1 className=\"h1 mb-0 text-gray-800\">New Case</h1>\n                            </div>\n\n        {/* **************** Cards ******************** */}\n                            {/* Content Row */}\n                            <div className=\"row\">\n\n            {/* **************** Cards1 ******************** */}            \n                                {/* Earnings (Monthly) Card Example */}\n                                <div className=\"col-xl-12 col-md-11 mb-4 ml-3 \">\n                                    <Grid item xs={12} sm={12} md={12} lg={4} xl={3} >\n                                        <Card \n                                        elevation={5} \n                                        variant=\"outlined \" \n                                        className='my-5 col  col-md-5 col-lg-5 col-xl-12' \n                                        onClick={handleClickOpen}\n                                        id='shitCardxx'>\n                                            <h2 className='pl-5 my-1 ' ></h2>\n                                            <div class='col col-5 col-md-5 col-sm-12 col-xs-12'>\n                                                <img style={{ width: \"100%\"}} src={survey}/>\n                                                <br/><br/>\n                                                </div>\n                                            <div class='horizonLine2'/>\n                                            <h4 className='my-3 ml-5 ' id='useFont2'>เพิ่มแบบสำรวจ</h4>\n                                            \n                                            <br/>\n                                        </Card>\n                                        \n                                        \n                                        \n                                    </Grid><br/><br/>\n\n                                    <Grid container spacing={5}>\n                                        <Grid item xs={12} sm={11} md={12} lg={4} xl={3} >\n                                                <Card elevation={5} variant=\"outlined \" className='my-2' id='shitCardNext1'>\n                                                    <Card elevation={1} variant=\"outlined \"  id='shitCardTop1' onClick={()=>{handleClickxxB1(\"B1\")}}>\n                                                        <h4 \n                                                        className='text-center p-4' \n                                                        id='useFont'>กักตัวเพื่อรอดูอาการ {\" \"} \n                                                        <Badge \n                                                        badgeContent={DataBoxLeft.length} \n                                                        color=\"secondary\">\n                                                        </Badge>\n                                                        </h4>\n                                                    </Card>\n                                                        <Collapse key={'B1'} in={openB1['B1']}>\n                                                        <List>\n                                                            {DataBoxLeft.map(item=>{\n                                                                // console.log(item)\n                                                                // console.table(item.status)\n                                                                return(\n                                                                <div class='border border-top-0'>\n                                                                    <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                                                    <ListItemAvatar>\n                                                                    <Avatar>\n                                                                    </Avatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText  key ={item.ID} >\n                                                                            \n                                                                            {item.checkedRisk==\"กักตัวเพื่อรอดูอาการ\"?\n                                                                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                                                <Box borderRadius={30} {...BoxStsProps1} >กักตัวเพื่อรอดูอาการ</Box>\n                                                                            </Box>:null}\n                                                                            \n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{ item.Comefrom }</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{ item.DateArrivedVillage }</span><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{ item.Temperature }{\" \"}{\"°C\"}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้ตรวจ:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                        </ListItemText>\n                                                                    </ListItem>\n                                                                    \n                                                                    <Collapse key={item.ID} in={openx[item.ID]}>\n                                                                    <div class='horizonLine3'/>\n                                                                        <ListItem key={item.ID}>\n                                                                    <ListItemAvatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText key ={item.ID}>\n                                                                            <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                                            <strong id='useFont'>{'เลขบัตรประชาชน:'+' '}</strong><span id='useFont2'>{item.Personal_ID}</span><br/>\n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'อายุ:'+' '}</strong><span id='useFont2'>{item.Age}</span><br/>\n                                                                            <strong id='useFont'>{'เพศ:'+' '}</strong><span id='useFont2'>{item.Genderchecked}</span><br/>\n                                                                            <strong id='useFont'>{'ที่อยู่:'+' '}</strong><span id='useFont2'>{item.AddressPerson}</span><br/>\n                                                                            <strong id='useFont'>{'อาชีพ:'+' '}</strong><span id='useFont2'>{item.Job}</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{item.Comefrom}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{item.DateArrivedVillage}</span><br/>\n                                                                            <h6 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h6>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedA} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่เสี่ยง\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedB} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่ที่มีคนมาก\"/><br/>   \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedC} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ใกล้ชิดผู้ป่วย\"/><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{item.Temperature}</span><br/>            \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedD} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดศีรษะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedE} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedF} disabled className=\"ml-5\" color=\"primary\"/>} label=\"มีเสมหะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedG} disabled className=\"ml-5\" color=\"primary\"/>} label=\"เจ็บคอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedH} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดกล้ามเนื้อ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedI} disabled className=\"ml-5\" color=\"primary\"/>} label=\"หายใจลำบาก\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedJ} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ท้องเสีย\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedK} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/><br/>     \n                                                                            <strong id='useFont'>{'ระบุผล:'+' '}</strong><span id='useFont2'>{item.checkedRisk}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้รายงาน:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n\n                                                                            <div className='row'>\n                                                                            <div class=\"col col-4\"></div>\n                                                                            <div class=\"col col-4\"></div>\n                                                                                <div className='row col my-2'>\n                                                                                    <div className='row'>\n                                                                                        <div>\n                                                                                            {item.checkedRisk==\"กักตัวเพื่อรอดูอาการ\"?\n                                                                                            <Alert \n                                                                                                key ={item.ID} \n                                                                                                id='AlertButton'\n                                                                                                severity=\"info\"\n                                                                                                onClick={ ()=>{ SelectAccept(item) } }>\n                                                                                                <AlertTitle id='useFont'>แก้ไขผล</AlertTitle>\n                                                                                            </Alert> :null\n                                                                                            }\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </ListItemText>\n                                                                        </ListItem>\n                                                            </Collapse>\n                                                            <Divider />\n                                                            </div>\n                                                            )})}\n                                                        </List>\n                                                        \n                                                        </Collapse>\n                                                </Card>\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={11} md={12} lg={4} xl={3} >\n                                                <Card elevation={5} variant=\"outlined \" className='my-2' id='shitCardNext1'>\n                                                    <Card elevation={1} variant=\"outlined \"  id='shitCardTop1' onClick={()=>{handleClickxxB2(\"B2\")}}>\n                                                        <h4 \n                                                        className='text-center p-4' \n                                                        id='useFont'>มีความเสี่ยง {\" \"} \n                                                        <Badge \n                                                        badgeContent={DataBoxMid.length} \n                                                        color=\"secondary\">\n                                                        </Badge>\n                                                        </h4>\n                                                    </Card>\n                                                        <Collapse key={'B2'} in={openB2['B2']}>\n                                                        <List>\n                                                            {DataBoxMid.map(item=>{\n                                                                // console.log(item)\n                                                                // console.table(item.status)\n                                                                return(\n                                                                <div class='border border-top-0'>\n                                                                    <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                                                    <ListItemAvatar>\n                                                                    <Avatar>\n                                                                    </Avatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText  key ={item.ID} >\n                                                                            \n                                                                            {item.checkedRisk==\"มีความเสี่ยง\"?\n                                                                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                                                <Box borderRadius={30} {...BoxStsProps2} >มีความเสี่ยง</Box>\n                                                                            </Box>:null}\n                                                                            \n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{ item.Comefrom }</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{ item.DateArrivedVillage }</span><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{ item.Temperature }{\" \"}{\"°C\"}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้ตรวจ:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                        </ListItemText>\n                                                                    </ListItem>\n                                                                    \n                                                                    <Collapse key={item.ID} in={openx[item.ID]}>\n                                                                    <div class='horizonLine3'/>\n                                                                        <ListItem key={item.ID}>\n                                                                    <ListItemAvatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText key ={item.ID}>\n                                                                            <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                                            <strong id='useFont'>{'เลขบัตรประชาชน:'+' '}</strong><span id='useFont2'>{item.Personal_ID}</span><br/>\n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'อายุ:'+' '}</strong><span id='useFont2'>{item.Age}</span><br/>\n                                                                            <strong id='useFont'>{'เพศ:'+' '}</strong><span id='useFont2'>{item.Genderchecked}</span><br/>\n                                                                            <strong id='useFont'>{'ที่อยู่:'+' '}</strong><span id='useFont2'>{item.AddressPerson}</span><br/>\n                                                                            <strong id='useFont'>{'อาชีพ:'+' '}</strong><span id='useFont2'>{item.Job}</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{item.Comefrom}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{item.DateArrivedVillage}</span><br/>\n                                                                            <h5 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h5>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedA} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่เสี่ยง\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedB} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่ที่มีคนมาก\"/><br/>   \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedC} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ใกล้ชิดผู้ป่วย\"/><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{item.Temperature}</span><br/>            \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedD} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดศีรษะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedE} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedF} disabled className=\"ml-5\" color=\"primary\"/>} label=\"มีเสมหะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedG} disabled className=\"ml-5\" color=\"primary\"/>} label=\"เจ็บคอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedH} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดกล้ามเนื้อ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedI} disabled className=\"ml-5\" color=\"primary\"/>} label=\"หายใจลำบาก\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedJ} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ท้องเสีย\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedK} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/><br/>     \n                                                                            <strong id='useFont'>{'ระบุผล:'+' '}</strong><span id='useFont2'>{item.checkedRisk}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้รายงาน:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้แก้ไขผล:'+' '}</strong><span id='useFont2'>{item.RecorderWhoChangeState}</span><br/>\n\n                                                                        </ListItemText>\n                                                                        </ListItem>\n                                                            </Collapse>\n                                                            <Divider />\n                                                            </div>\n                                                            )})}\n                                                        </List>\n                                                        \n                                                        </Collapse>\n                                                </Card>\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={11} md={12} lg={4} xl={3} >\n                                                <Card elevation={5} variant=\"outlined \" className='my-2' id='shitCardNext1'>\n                                                    <Card elevation={1} variant=\"outlined \"  id='shitCardTop1' onClick={()=>{handleClickxxB3(\"B3\")}}>\n                                                        <h4 \n                                                        className='text-center p-4' \n                                                        id='useFont'>ไม่มีอาการ {\" \"} \n                                                        <Badge \n                                                        badgeContent={DataBoxRight.length} \n                                                        color=\"secondary\">\n                                                        </Badge>\n                                                        </h4>\n                                                    </Card>\n                                                        <Collapse key={'B3'} in={openB3['B3']}>\n                                                        <List>\n                                                            {DataBoxRight.map(item=>{\n                                                                // console.log(item)\n                                                                // console.table(item.status)\n                                                                return(\n                                                                <div class='border border-top-0'>\n                                                                    <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                                                    <ListItemAvatar>\n                                                                    <Avatar>\n                                                                    </Avatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText  key ={item.ID} >\n                                                                            \n                                                                            {item.checkedRisk==\"ไม่มีอาการ\"?\n                                                                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                                                <Box borderRadius={30} {...BoxStsProps3} >ไม่มีอาการ</Box>\n                                                                            </Box>:null}\n                                                                            \n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{ item.Comefrom }</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{ item.DateArrivedVillage }</span><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{ item.Temperature }{\" \"}{\"°C\"}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้ตรวจ:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                        </ListItemText>\n                                                                    </ListItem>\n                                                                    \n                                                                    <Collapse key={item.ID} in={openx[item.ID]}>\n                                                                    <div class='horizonLine3'/>\n                                                                        <ListItem key={item.ID}>\n                                                                    <ListItemAvatar>\n                                                                    </ListItemAvatar>\n                                                                        <ListItemText key ={item.ID}>\n                                                                            <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                                            <strong id='useFont'>{'เลขบัตรประชาชน:'+' '}</strong><span id='useFont2'>{item.Personal_ID}</span><br/>\n                                                                            <strong id='useFont'>{'ชื่อ-สกุล:'+' '}</strong><span id='useFont2'>{ item.Name }{\" \"}{ item.LastName }</span><br/>\n                                                                            <strong id='useFont'>{'อายุ:'+' '}</strong><span id='useFont2'>{item.Age}</span><br/>\n                                                                            <strong id='useFont'>{'เพศ:'+' '}</strong><span id='useFont2'>{item.Genderchecked}</span><br/>\n                                                                            <strong id='useFont'>{'ที่อยู่:'+' '}</strong><span id='useFont2'>{item.AddressPerson}</span><br/>\n                                                                            <strong id='useFont'>{'อาชีพ:'+' '}</strong><span id='useFont2'>{item.Job}</span><br/>\n                                                                            <strong id='useFont'>{'เดินทางมาจาก:'+' '}</strong><span id='useFont2'>{item.Comefrom}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่เข้าหมู่บ้าน:'+' '}</strong><span id='useFont2'>{item.DateArrivedVillage}</span><br/>\n                                                                            <h5 id=\"useFont\" className=\"ml-3\">ประเมินความเสี่ยงเบื้องต้น ในรอบ 14 วัน</h5>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedA} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่เสี่ยง\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedB} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไปสถานที่ที่มีคนมาก\"/><br/>   \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedC} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ใกล้ชิดผู้ป่วย\"/><br/>\n                                                                            <strong id='useFont'>{'อุณหภูมิ:'+' '}</strong><span id='useFont2'>{item.Temperature}</span><br/>            \n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedD} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดศีรษะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedE} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedF} disabled className=\"ml-5\" color=\"primary\"/>} label=\"มีเสมหะ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedG} disabled className=\"ml-5\" color=\"primary\"/>} label=\"เจ็บคอ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedH} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ปวดกล้ามเนื้อ\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedI} disabled className=\"ml-5\" color=\"primary\"/>} label=\"หายใจลำบาก\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedJ} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ท้องเสีย\"/><br/>\n                                                                                <FormControlLabel control={ <Checkbox checked={item.stateCheckedK} disabled className=\"ml-5\" color=\"primary\"/>} label=\"ไม่สามารถรับรู้กลิ่น/รสชาติ\"/><br/>     \n                                                                            <strong id='useFont'>{'ระบุผล:'+' '}</strong><span id='useFont2'>{item.checkedRisk}</span><br/>\n                                                                            <strong id='useFont'>{'ผู้รายงาน:'+' '}</strong><span id='useFont2'>{item.Recorder}</span><br/>\n                                                                            <strong id='useFont'>{'วันที่ตรวจ:'+' '}</strong><span id='useFont2'>{item.RecordTime}</span><br/>\n\n                                                                        </ListItemText>\n                                                                        </ListItem>\n                                                            </Collapse>\n                                                            <Divider />\n                                                            </div>\n                                                            )})}\n                                                        </List>\n                                                        \n                                                        </Collapse>\n                                                </Card>\n                                        </Grid>\n\n                                    </Grid>\n\n                                </div>\n                                {/* Pending Requests Card Example */}\n  \n                            </div>\n                            {/* Content Row */}\n                            <div className=\"row\">\n                                {/* Area Chart */}\n\n                                {/* Pie Chart */}\n                                <div className=\"col-xl-4 col-lg-5\">\n\n                                </div>\n                            </div>\n                            {/* Content Row */}\n                        </div>\n                        {/* /.container-fluid */}\n                    </div>\n\n{/* **************** Footer ******************** */}\n                    {/* Footer */}\n                    <footer className=\"sticky-footer bg-white\">\n                        <div className=\"container my-auto\">\n                            <div className=\"copyright text-center my-auto\">\n                                <span>Copyright © Shit Website 2077</span>\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n\n\n{/* **************** AcceptDialog ******************** */}  \n                <div className='containter row pl-2'>       \n                    <div >\n                                <Dialog fullWidth \n                                TransitionComponent={Transition2}\n                                    open={OpenconfirmAccept} onClose={handleClickCloseConfirmAccept} \n                                    aria-labelledby=\"form-dialog-title\" id='Dialog2'>\n                                        <h3 id='useFont' className='ml-4 mt-4 mb-3'>แก้ไขผล</h3>\n                                        <DialogContent>\n                                            <DialogContentText id='useFont'>\n                                                ต้องการเปลี่ยนสถานะของ <strong >{AcceptPeople}</strong>  โปรดกรอกชื่อและกดปุ่ม <strong>\"ยืนยัน\"</strong>.\n                                            </DialogContentText>\n                                            <form id=\"SENDACC\" name=\"SENDACC\" onSubmit={ handleClickCloseConfirmAcceptWihtAccept }>\n                                                <TextField\n                                                    required\n                                                    autoFocus\n                                                    margin=\"dense\"\n                                                    id=\"name\"\n                                                    label=\"ผู้แก้ไขผล\"\n                                                    inputProps={{style: {fontFamily:'Mitr'}}} \n                                                    InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                                    value={ RecorderWhoChangeState }\n                                                    onChange={ event =>  setRecorderWhoChangeState(event.target.value) }\n                                                    type=\"text\"\n                                                    fullWidth\n                                                />\n                                                    <br/><br/>\n                                                    {/* <Checkbox\n                                                        checked={checked}\n                                                        onChange={handleChange}\n                                                        value=\"primary\"\n                                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                                    /> */}\n                                                    <p id='useFont'>ต้องการเปลี่ยนสถานะเป็น</p>\n                                                    <Radio\n                                                    \n                                                        checked={checkedAfterquarantine === 'ไม่มีอาการ'}\n                                                        onChange={ event =>  setCheckedAfterquarantine(event.target.value) }\n                                                        value=\"ไม่มีอาการ\"\n                                                        color='primary'\n                                                        name=\"radio-button-demo\"\n                                                        inputProps={{ 'aria-label': 'A' }}\n                                                    /><span id='useFont'>ไม่มีอาการ</span>\n                                                    <Radio\n                                                        checked={checkedAfterquarantine === 'มีความเสี่ยง'}\n                                                        onChange={ event =>  setCheckedAfterquarantine(event.target.value) }\n                                                        value=\"มีความเสี่ยง\"\n                                                        color='secondary'\n                                                        name=\"radio-button-demo\"\n                                                        inputProps={{ 'aria-label': 'B' }}\n                                                    /><span id='useFont'>มีความเสี่ยง</span>\n                                                    \n                                            </form>\n                                        </DialogContent>\n                                        \n                                        <DialogActions>\n                                        <Button \n                                            id='AlertButton2' \n                                            variant=\"contained\" \n                                            color=\"secondary\"\n                                            size=\"large\"\n                                            onClick={handleClickCloseConfirmAccept}><AlertTitle id='useFont'>ยกเลิก</AlertTitle>\n                                        </Button>\n                                        <Button \n                                            form=\"SENDACC\"\n                                            type=\"submit\"\n                                            id='AlertButton' \n                                            variant=\"contained\" \n                                            color=\"primary\"\n                                            size=\"large\"\n                                            // onClick={handleClickCloseConfirmAcceptWihtAccept}\n                                            >\n                                                <AlertTitle id='useFont'>ยืนยัน</AlertTitle>\n                                            </Button>\n                                        </DialogActions>\n                                    </Dialog>\n                    </div>\n                </div>  \n            </Fragment>\n\n\n\n       \n    )\n}\nexport default NewCase","import React, { Fragment,useState, useEffect } from 'react'\n\nconst NotFoundPage =()=>{\n\n\n    return(\n        <>\n        404\n        </>\n    )\n}\n\nexport default NotFoundPage","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as HashRouter, Router, Route, Switch } from 'react-router-dom';\nimport Home from './Pages/Home';\nimport NewCase from './Pages/NewCase';\nimport NotFoundPage from './Pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <div id=\"wrapper\">\n      {/* <HashRouter > */}\n    {/* <Router> */}\n     \n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/NewCase\" component={NewCase} />\n          <Route component={NotFoundPage} />\n        </Switch>\n       \n      {/* </Router> */}\n      {/* </HashRouter> */}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Home from './Pages/Home';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}